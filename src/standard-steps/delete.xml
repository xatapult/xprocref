<?xml version="1.0" encoding="UTF-8"?>
<step name="delete" version-idref="v30" category-idrefs="standard-steps basic-xml-manipulation" short-description="Delete nodes in documents"
  required="true" publish="true" href-specification="{$BASELINK-STANDARD-STEPS}#c.delete"
  xsi:schemaLocation="http://www.xtpxlib.nl/ns/xprocref ../../xsd/xprocref.xsd" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.xtpxlib.nl/ns/xprocref">

  <!-- ======================================================================= -->

  <signature>

    <input port="source" content-types="xml html" primary="true" sequence="true">
      <description>
        <para>The document(s) to delete the nodes from.</para>
      </description>
    </input>

    <output port="result" content-types="text xml html" primary="true" sequence="true">
      <description>
        <para>The resulting document(s).</para>
      </description>
    </output>

    <option name="match" required="true" as="xs:string" subtype="XSLTSelectionPattern">
      <description>
        <para>The XSLT match pattern for the nodes to delete, as a string.</para>
      </description>
    </option>

  </signature>

  <!-- ======================================================================= -->

  <summary>
    <para>The <step/> step deletes nodes, specified by an XSLT selection pattern, from the document(s) appearing on its <code>source</code> port. The
      resulting document(s) appears on the <port>result</port> port.</para>
  </summary>

  <!-- ======================================================================= -->

  <description>

    <para>The <step/> step takes the XSLT match pattern in the <option>match</option> option and holds this against the document(s) appearing on its
        <port>source</port> port. Any matching nodes are deleted (including child nodes, if any). The resulting document(s) appear on the
        <port>result</port> port.</para>

    <para>Note that deleting an element means that the entire element, including child elements, gets deleted. If you just want to delete the element
      but keep the child elements, you need <step-ref name="p:unwrap"/>.</para>

  </description>

  <!-- ======================================================================= -->

  <detail>
    <xi:include href="../text-fragments/document-properties-preserved.xml"/>
  </detail>

  <detail>
    <para>This step cannot remove namespaces, if you try this <step-error-ref code="XC0023"/> is raised. For removing namespaces use <step-ref
        name="p:namespace-delete"/>.</para>
  </detail>

  <detail>
    <para>Deleting an <code>xml:base</code> attribute does <emphasis>not</emphasis> change the base URI of the element on which it occurred.</para>
  </detail>

  <!-- ======================================================================= -->

  <example title="Basic usage">
    <para>The following example deletes all <tag>text</tag> elements with an attribute <code>type="normal"</code> from the source document.</para>
    <xproc-example href="examples/delete/delete-01.xpl"/>
  </example>

  <!-- ======================================================================= -->

  <step-errors>
    <step-error code="XC0023"/>
    <step-error code="XC0062"/>
  </step-errors>

</step>
