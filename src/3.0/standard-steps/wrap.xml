<?xml version="1.0" encoding="UTF-8"?>
<step name="wrap" version-idref="v30" category-idrefs="standard-steps basic-xml-manipulation" short-description="Wraps nodes in a parent element"
  required="true" publish="true" href-specification="{$BASELINK-STANDARD-STEPS-V30}#c.wrap"
  xsi:schemaLocation="http://www.xtpxlib.nl/ns/xprocref ../../../xsd/xprocref.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns="http://www.xtpxlib.nl/ns/xprocref"
  keywords="element node">

  <!-- ======================================================================= -->

  <signature>

    <input port="source" content-types="xml html" primary="true" sequence="false">
      <description>
        <para>The document that contains the nodes to wrap.</para>
      </description>
    </input>

    <output port="result" content-types="application/xml" primary="true" sequence="false">
      <description>
        <para>The resulting document.</para>
      </description>
    </output>

    <option name="wrapper" required="true" as="xs:QName">
      <description>
        <para>The name of the wrapping element.</para>
      </description>
    </option>

    <option name="match" required="true" as="xs:string" subtype="XSLTSelectionPattern">
      <description>
        <para>The XSLT match pattern for the nodes to wrap, as a string. This must match either the document-node, an element, a
          processing-instruction, or a comment. If any other kind of node is matched, error <step-error-ref code="XC0023"/> is raised.</para>
      </description>
    </option>

    <option name="group-adjacent" as="xs:string?" subtype="XPathExpression" required="false">
      <description>
        <para>An XPath expression to use for grouping the wrapped elements. See <xref linkend="grouping"/> below.</para>
      </description>
    </option>

  </signature>

  <!-- ======================================================================= -->

  <summary>
    <para>The <step/> step wraps matching nodes in the document on the <port>source</port> into a new parent element.</para>
  </summary>

  <!-- ======================================================================= -->

  <description>

    <para>The <step/> step takes the XSLT match pattern in the <option>match</option> option and holds this against the document appearing on its
        <port>source</port> port. This pattern must match the document-node, an element, a processing-instruction, or a comment. The matched node is
      wrapped in an element, as specified in the <option>wrapper</option> option.</para>

    <para>The <step/> step perform a &#x201c;deep&#x201d; wrapping: the children of any matched node are also processed. Wrappers are added to
        <emphasis>all</emphasis> matching nodes.</para>

    <para>You can&#x2019;t use <step/> to wrap a text document. For this use <step-ref name="p:wrap-sequence"/>.</para>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <section xml:id="grouping">
      <title>Grouping</title>

      <para>The <option>group-adjacent</option> option of <step/> allows you to group adjacent matching nodes in a single wrapper element. The value
        of this option must a valid XPath expression. It is evaluated for every node in the source document. Adjacent nodes with an equal result value
        are wrapped together in the same wrapper element.</para>

      <para>For all nodes in the document on the <port>source</port> port:</para>
      <itemizedlist>
        <listitem>
          <para>The node becomes the context item (accessible with the dot <code>.</code> operator).</para>
        </listitem>
        <listitem>
          <para>The expression in the <option>group-adjacent</option> option is evaluated.</para>
        </listitem>
        <listitem>
          <para>Two values of sibling nodes, computed by the XPath expression, are considered equal if the XPath function <link
              xlink:href="https://www.w3.org/TR/xpath-functions-31/#func-deep-equal" role="newpage"><code>deep-equal()</code></link> returns
              <code>true</code> for them. In most cases this simply means that values are equal when you intuitively expect them to be.</para>
        </listitem>
        <listitem>
          <para>All sibling nodes with equal values for the XPath expression, that are adjacent, are wrapped together in a wrapper element, as named
            by the <option>wrapper</option> option.</para>
        </listitem>
      </itemizedlist>
      <para>For an example see <example-ref idref="ws-grouping"/>.</para>
    </section>


  </description>

  <!-- ======================================================================= -->

  <detail>
    <xi:include href="../../text-fragments/document-properties-preserved.xml"/>
  </detail>

  <!-- ======================================================================= -->

  <example title="Basic usage">

    <para>The following example wraps every <code>thing</code> element in a <tag>computer-part</tag> element:</para>

    <xproc-example href="../../examples/wrap/wrap-01.xpl"/>

    <para>Please notice that the nested <tag>thing</tag> elements (inside the <tag>subthings</tag> element) are also wrapped. This is because <step/>
      performs &#x201c;deep&#x201d; wrapping.</para>

  </example>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <example title="Grouping and wrapping" id="ws-grouping">

    <para>This example shows what happens when you use the <option>group-adjacent</option> option. Here we group fruits by color:</para>

    <xproc-example href="../../examples/wrap/wrap-02.xpl"/>

    <para>You might have expected that the result would group the fruits together by color, resulting in groups of elements, wrapped in
        <tag>fruits-by-color</tag> elements: one for <code>banana</code>+<code>lemon</code> and one for <code>orange</code>+<code>carrot</code>. But
      <step/> groups sibling nodes that are <emphasis>adjacent</emphasis> to each other only. It does <emphasis>not</emphasis> do what would be called
      &#x201c;group by&#x201d;: all sibling nodes with the same value for the XPath expression together in a single group. If you need this, you will
      have to sort the document first. But unfortunately, XProc does not have anything on board for that. For more complex grouping, the advice is to
      use XSLT or XQuery.</para>

  </example>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <example title="Replacing comments by elements">

    <para>This example shows that you can use <step/> not only to wrap elements, but also other kinds of nodes. Here we use its functionality,
      together with the <step-ref name="p:string-replace"/> step, to change comments into elements. For this, we first wrap every element in a
        <tag>comment</tag> element and then turn these comments into text nodes using <step-ref name="p:string-replace"/>. </para>

    <xproc-example href="../../examples/wrap/wrap-03.xpl"/>
  </example>

  <!-- ======================================================================= -->

  <step-errors>
    <step-error code="XC0023"/>
  </step-errors>

</step>
