<?xml version="1.0" encoding="UTF-8"?>
<step name="namespace-rename" version-idref="v30" category-idrefs="standard-steps basic-xml-manipulation namespaces"
  short-description="Renames a namespace to a new URI" required="true" publish="true"
  href-specification="{$BASELINK-STANDARD-STEPS-V30}#c.namespace-rename"
  xsi:schemaLocation="http://www.xtpxlib.nl/ns/xprocref ../../../xsd/xprocref.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns="http://www.xtpxlib.nl/ns/xprocref"
  keywords="namespace namespaces rename">

  <!-- ======================================================================= -->

  <signature>

    <input port="source" content-types="xml html" primary="true" sequence="false">

      <description>
        <para>The document to rename the namespace in.</para>
      </description>
    </input>

    <output port="result" content-types="xml html" primary="true" sequence="false">
      <description>
        <para>The resulting document.</para>
      </description>
    </output>

    <option name="from" as="xs:anyURI?" required="false">
      <description>
        <para>The namespace URI to rename from.</para>
      </description>
    </option>

    <option name="to" as="xs:anyURI?" required="false">
      <description>
        <para>The namespace URI to rename to.</para>
      </description>
    </option>

    <option name="apply-to" select="'all'" values="('all','elements','attributes')" required="false" as="item()*">
      <description>
        <para>Whether to apply the changes to elements, attributes or both. See <xref linkend="apply-to"/> below.</para>
      </description>
    </option>

  </signature>

  <!-- ======================================================================= -->

  <summary>
    <para>The <step/> step renames any namespace declaration or use of a namespace in a document to a new value.</para>
  </summary>

  <!-- ======================================================================= -->

  <description>

    <para>The <step/> step changes a namespace in a document into another namespace. It affects both the namespace bindings and the namespace usage.
      Usually that's all there is to it, you can rely on the step to take care of all the details (for those that need to know, see <xref
        linkend="details"/>).</para>
    <para>If you want to remove a namespace altogether, you need <step-ref name="p:namespace-delete"/>.</para>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <section xml:id="apply-to">
      <title>The <option>apply-to</option> option</title>

      <para>The <option>apply-to</option> option can take the following values:</para>
      <table role="nonumber">
        <title/>
        <tgroup cols="2">
          <colspec colwidth="15%"/>
          <thead>
            <row>
              <entry>
                <para>Value</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
                  <code>all</code> (default) </para>
              </entry>
              <entry>
                <para>Apply the changes to both elements and attributes.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <code>attributes</code>
                </para>
              </entry>
              <entry>
                <para>Apply the changes to attributes only.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <code>elements</code>
                </para>
              </entry>
              <entry>
                <para>Apply the changes to elements only.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>The main reason for having an <option>apply-to</option> option is to avoid renaming attributes when the <option>from</option> option
        specifies no namespace. This happens when you want to turn a document that is not in a namespace into some namespace. Often however,
        attributes are never in a namespace. By setting the <option>apply-to</option> option to <code>elements</code>, the attributes are not
        affected.</para>

    </section>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <section xml:id="details">
      <title>Detailed processing</title>

      <para>The step takes the document appearing on its <port>source</port> port and examines it for occurrences of the namespace mentioned in the
          <option>from</option> option:</para>
      <itemizedlist>
        <listitem>
          <para>A <emphasis>namespace binding</emphasis> with the <option>from</option> value, either defining a prefix (<code>xmlns:…="…"</code>) or
            a default namespace (<code>xmlns="…"</code>) declaration, gets the value as specified in the <option>to</option> option.</para>
          <para>If the <option>from</option> option is absent or the empty string, no bindings are changed/removed.</para>
          <para>If the <option>to</option> option is not specified or the empty string, the binding is removed.</para>
        </listitem>
        <listitem>
          <para>Depending on the value of the <option>apply-to</option> option (see <xref linkend="apply-to"/>), elements and/or attributes that are
            in the <option>from</option> namespace are turned into the <option>to</option> namespace.</para>
          <para>If the <option>from</option> option is absent to the empty string, the changes apply to elements/attributes without a namespace (that
            are in the no-namespace).</para>
          <para>If the <option>to</option> option is not specified or the empty string, the namespace of the element/attribute is removed (putting it
            into the no-namespace).</para>
        </listitem>
      </itemizedlist>

    </section>

  </description>

  <!-- ======================================================================= -->

  <detail>
    <xi:include href="../../text-fragments/document-properties-preserved.xml"/>
  </detail>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <detail>
    <para>If the value of the <option>from</option> and <option>to</option> option are the same nothing happens. The step acts like a <step-ref
        name="p:identity"/> step.</para>
  </detail>

  <!-- ======================================================================= -->

  <example title="Basic usage">

    <xproc-example href="../../examples/namespace-rename/namespace-rename-01.xpl"/>

    <xproc-example href="../../examples/namespace-rename/namespace-rename-02.xpl" keep-namespace-prefixes="ns">
      <source-header>
        <para>This also works when the source document uses a namespace prefix:</para>
      </source-header>
    </xproc-example>

  </example>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <example title="Renaming to a namespace">

    <para>If you rename a document from the no-namespace into a namespace, you usually <emphasis>don&#x2019;t</emphasis> want to rename the attributes
      to that namespace as well. However, if you don&#x2019;t do anything special, this is exactly what will happen:</para>

    <xproc-example href="../../examples/namespace-rename/namespace-rename-03.xpl"/>

    <xproc-example href="../../examples/namespace-rename/namespace-rename-04.xpl" show-source="false">
      <pipeline-header>
        <para>The XProc processor invents a namespace prefix, and uses this to put the attribute(s) in the target namespace as well. To avoid this,
          set the <option>apply-to</option> option to <code>elements:</code></para>
      </pipeline-header>
    </xproc-example>

  </example>

  <!-- ======================================================================= -->

  <step-errors>
    <step-error code="XC0014"/>
    <step-error code="XC0092"/>
  </step-errors>

</step>
