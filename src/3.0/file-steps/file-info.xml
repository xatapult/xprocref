<?xml version="1.0" encoding="UTF-8"?>
<step name="file-info" version-idref="v30" category-idrefs="file-steps env" short-description="Returns information about a file or directory"
  required="false" publish="true" href-specification="{$BASELINK-FILE-STEPS-V30}#c.file-info"
  xsi:schemaLocation="http://www.xtpxlib.nl/ns/xprocref ../../../xsd/xprocref.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xdoc="http://www.xtpxlib.nl/ns/xdoc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns="http://www.xtpxlib.nl/ns/xprocref" keywords="file directory info information metadata">

  <!-- ======================================================================= -->

  <signature>

    <output port="result" primary="true" content-types="application/xml" sequence="false">
      <description>
        <para>A small XML document, describing the file or directory referenced by the <option>href</option> option. See <xref
            linkend="result-document"/>.</para>
      </description>
    </output>

    <option name="href" required="true" as="xs:anyURI">
      <description>
        <para>The URI of the file or directory to describe.</para>
      </description>
    </option>

    <option name="fail-on-error" as="xs:boolean" select="true()" required="false">
      <description>
        <xi:include href="../../text-fragments/file-fail-on-error.xml"/>
      </description>
    </option>

    <option name="override-content-types" as="array(array(xs:string))?" required="false">
      <description>
        <para>Use this to override the content-type determination of files.</para>
        <para>This works just like the mechanism for the <option>override-content-types</option> option of <step-ref name="p:archive-manifest"/>,
          except that the regular expression matching is done against the absolute URI of the file.</para>
      </description>
    </option>

  </signature>

  <!-- ======================================================================= -->

  <summary>
    <para>The <step/> step returns information about a file or directory (or other file system object).</para>
  </summary>

  <!-- ======================================================================= -->

  <description>
    <para>The <step/> step returns information about a file or directory (or other file system object) as a small XML document on its
        <port>result</port> port. What will be returned is dependent on the type of file system object, see <xref linkend="result-document"/>.</para>


    <section xml:id="result-document">
      <title>The result document</title>

      <para>The result document describing a file or directory consists of either a <tag>c:file</tag> or <tag>c:directory</tag> element (the
          <code>c</code> prefix here is bound to the <code>http://www.w3.org/ns/xproc-step</code> namespace). These elements and their attributes are
        the same as returned by <step-ref name="p:directory-list"/> for such a file system object (with the <option>detailed</option> option set to
          <code>true</code>). </para>

      <para>If the <option>href</option> option references any other system object (for instance, on Unix, a device), the result is
        implementation-defined and therefore depends on the XProc processor used.</para>

    </section>

  </description>

  <!-- ======================================================================= -->

  <detail>
    <xi:include href="../../text-fragments/no-document-properties-except-content-type.xml"/>
  </detail>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <detail>
    <para>Relative values for the <option>href</option> option are resolved against the base URI of the element on which this option is specified. In
      most cases this will be the static base URI of your pipeline (the path where the XProc source containing the <step/> is stored).</para>
  </detail>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <detail>
    <xi:include href="../../text-fragments/file-scheme-uris.xml"/>
  </detail>

  <!-- ======================================================================= -->

  <example title="Basic usage">

    <para>The following example returns information about the <code>data/</code> directory</para>

    <xproc-example href="../../examples/file-info/file-info-02.xpl" show-source="false" keep-from="data"/>

    <para>Notice that the result has an <code>xml:base</code> attribute with the absolute URI of the object described. This is attribute is not
      mandatory, but you can very probably rely on it being there.</para>

    <para>Describing a file looks like this:</para>

    <xproc-example href="../../examples/file-info/file-info-01.xpl" show-source="false" keep-from="data"/>

  </example>

  <!-- ======================================================================= -->

  <step-errors>
    <step-error code="XC0134"/>
    <step-error code="XD0064"/>
    <step-error code="XC0135"/>
    <step-error code="XD0011"/>
  </step-errors>

</step>
