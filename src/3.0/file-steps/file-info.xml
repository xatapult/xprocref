<?xml version="1.0" encoding="UTF-8"?>
<step name="file-info" version-idref="v30" category-idrefs="file-steps" short-description="[EDIT] file-info short description" required="false"
  publish="false" href-specification="{$BASELINK-FILE-STEPS-V30}#c.file-info"
  xsi:schemaLocation="http://www.xtpxlib.nl/ns/xprocref ../../../xsd/xprocref.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.xtpxlib.nl/ns/xprocref">
  <signature>
    <output port="result" primary="true" content-types="application/xml" sequence="false">
      <description>
        <para>[EDIT] output result</para>
      </description>
    </output>
    <option name="href" required="true" as="xs:anyURI">
      <description>
        <para>[EDIT] option href</para>
      </description>
    </option>
    <option name="fail-on-error" as="xs:boolean" select="true()" required="false">
      <description>
        <para>[EDIT] option fail-on-error</para>
      </description>
    </option>
    <option name="override-content-types" as="array(array(xs:string))?" required="false">
      <description>
        <para>[EDIT] option override-content-types</para>
      </description>
    </option>
  </signature>
  <summary>
    <para>[EDIT]</para>
    <para>The <code>p:file-info</code> step returns information about a file, directory or other file system object.</para>
  </summary>
  <description>
    <para>[EDIT]</para>
    <para>The <tag>p:file-info</tag> step returns information about the file, directory or other file system object named in the <option>href</option>
      option.</para>
    <para>Conformant processors must support URIs whose scheme is <code>file</code> for the <option>href</option> option of <tag>p:file-info</tag>. It
      is implementation-defined what other schemes are supported by <tag>p:file-info</tag>, and what the interpretation of ‘directory’, ‘file’ and
      ‘contents’ is for those schemes. <emphasis role="bold">[ERROR <step-error-ref code="XC0134"/>]</emphasis>
    </para>
    <para>If <option>href</option> is relative, it is made absolute against the base URI of the element on which it is specified
        (<tag>p:with-option</tag> or <tag>p:file-info</tag> in the case of a syntactic shortcut value). <emphasis role="bold">[ERROR <step-error-ref
          code="XD0064"/>]</emphasis>
      <emphasis role="bold">[ERROR <step-error-ref code="XC0135"/>]</emphasis></para>
    <para>If the <option>href</option> option is a <code>file:</code> URI, the step returns:</para>
    <itemizedlist>
      <listitem>
        <para>If <option>href</option> option references a file: A <tag>c:file</tag> element with standard attributes (see below).</para>
      </listitem>
      <listitem>
        <para>If <option>href</option> option references a directory: A <tag>c:directory</tag> element with standard attributes (see below).</para>
      </listitem>
      <listitem>
        <para>If <option>href</option> option references any other file system object: Implementation defined (for example an <tag>c:other</tag> or
            <tag>c:device</tag> element). It is advised to use the standard attributes (see below) if applicable.</para>
      </listitem>
    </itemizedlist>
    <para>The <option>override-content-types</option> option can be used to partially override the content-type determination mechanism for files.
      This works just like with the <option>override-content-types</option> option of <tag>p:archive-manifest</tag> and <tag>p:unarchive</tag> (see
        <xspecref spec="steps" xref="override-content-type"/>), except that the regular expression matching is done against the absolute URI of the
      file.</para>
    <para>Each of the elements <tag>c:file</tag>, <tag>c:directory</tag>, and <tag>c:other</tag> has a <code>name</code> attribute, whose value is a
      relative IRI reference, giving the (local) file or directory name.</para>
    <para>The following attributes are standard on a returned <tag>c:file</tag> or <tag>c:directory</tag> element. All attributes are optional and
      must be absent if not applicable. Additional implementation-defined attributes may be present, but they must be in a namespace.</para>
    <informaltable pgwide="1">
      <tgroup cols="3">
        <colspec colwidth="1in"/>
        <colspec colwidth="1in"/>
        <thead>
          <row>
            <entry>Attribute</entry>
            <entry>Type</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <tag class="attribute">readable</tag>
            </entry>
            <entry>
              <type>xs:boolean</type>
            </entry>
            <entry><literal>true</literal> if the object is readable.</entry>
          </row>
          <row>
            <entry>
              <tag class="attribute">writable</tag>
            </entry>
            <entry>
              <type>xs:boolean</type>
            </entry>
            <entry><literal>true</literal> if the object file is writable.</entry>
          </row>
          <row>
            <entry>
              <tag class="attribute">hidden</tag>
            </entry>
            <entry>
              <type>xs:boolean</type>
            </entry>
            <entry><literal>true</literal> if the object is hidden.</entry>
          </row>
          <row>
            <entry>
              <tag class="attribute">last-modified</tag>
            </entry>
            <entry>
              <type>xs:dateTime</type>
            </entry>
            <entry>The last modification time of the object expressed in UTC.</entry>
          </row>
          <row>
            <entry>
              <tag class="attribute">size</tag>
            </entry>
            <entry>
              <type>xs:integer</type>
            </entry>
            <entry>The size of the object in bytes.</entry>
          </row>
          <row>
            <entry>
              <tag class="attribute">content-type</tag>
            </entry>
            <entry>
              <type>xs:string</type>
            </entry>
            <entry>The content type, if the object is a file.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>If an error occurs and <option>fail-on-error</option> is <code>false</code>, the step returns a <tag>c:error</tag> element which may contain
      additional, implementation-defined, information about the nature of the error.</para>
    <para>If an error occurs and <option>fail-on-error</option> is <code>true</code>, one of the following errors is raised:</para>
    <itemizedlist>
      <listitem>
        <para>
          <emphasis role="bold">[ERROR <step-error-ref code="XD0011"/>]</emphasis>
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead>Document properties</bridgehead>
    <para feature="file-info-preserves-none">The resulting document has no properties apart from <property>content-type</property>. In particular, it
      has no <property>base-uri</property>.</para>
  </description>
  <step-errors>
    <step-error code="XC0134"/>
    <step-error code="XD0064"/>
    <step-error code="XC0135"/>
    <step-error code="XD0011"/>
  </step-errors>
</step>
