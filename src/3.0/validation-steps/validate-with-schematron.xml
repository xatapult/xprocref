<?xml version="1.0" encoding="UTF-8"?>
<step name="validate-with-schematron" version-idref="v30" category-idrefs="validation-steps"
  short-description="[EDIT] validate-with-schematron short description" required="false" publish="false"
  href-specification="{$BASELINK-VALIDATION-STEPS-V30}#c.validate-with-schematron"
  xsi:schemaLocation="http://www.xtpxlib.nl/ns/xprocref ../../../xsd/xprocref.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.xtpxlib.nl/ns/xprocref">
  
  <signature>
    <input port="source" primary="true" content-types="xml html" sequence="false">
      <description>
        <para>[EDIT] input source</para>
      </description>
    </input>
    <input port="schema" content-types="xml" primary="false" sequence="false">
      <description>
        <para>[EDIT] input schema</para>
      </description>
    </input>
    <output port="result" primary="true" content-types="xml html" sequence="false">
      <description>
        <para>[EDIT] output result</para>
      </description>
    </output>
    <output port="report" sequence="true" content-types="xml json" primary="false">
      <description>
        <para>[EDIT] output report</para>
      </description>
    </output>
    <option name="parameters" as="map(xs:QName,item()*)?" required="false">
      <description>
        <para>[EDIT] option parameters</para>
      </description>
    </option>
    <option name="phase" select="'#DEFAULT'" as="xs:string" required="false">
      <description>
        <para>[EDIT] option phase</para>
      </description>
    </option>
    <option name="assert-valid" select="true()" as="xs:boolean" required="false">
      <description>
        <para>[EDIT] option assert-valid</para>
      </description>
    </option>
    <option name="report-format" select="'svrl'" as="xs:string" required="false">
      <description>
        <para>[EDIT] option report-format</para>
      </description>
    </option>
  </signature>
  <summary>
    <para>[EDIT]</para>
    <para>The <tag>p:validate-with-schematron</tag> step applies <link xlink:href="https://schematron.com/" role="newpage"
        xmlns:xlink="http://www.w3.org/1999/xlink">Schematron</link> processing to the <port>source</port> document.</para>
  </summary>
  <description>
    <para>[EDIT]</para>
    <para>
      <emphasis role="bold">[ERROR <step-error-ref code="XC0151"/>]</emphasis>
    </para>
    <para>
      <emphasis role="bold">[ERROR <step-error-ref code="XC0054"/>]</emphasis>
    </para>
    <note xml:id="note-assert-valid_schematron">
      <para>A Schematron validation with <literal>assert-valid="true"</literal> will fail if any validation message is produced by
          <tag>sch:assert</tag> or <tag>sch:report</tag>, even if the severity level of the failed assertion or the successful report is below a
        certain threshold, for example if there is only an <literal>info</literal> message. (The severity is conventionally conveyed by the
          <literal>@role</literal> attribute on <tag>sch:assert</tag> or <tag>sch:report</tag>.) </para>
    </note>
    <para>The value of the <option>phase</option> option identifies the Schematron validation phase with which validation begins.</para>
    <para>The <option>parameters</option> option provides name/value pairs which correspond to Schematron external variables, to parameters that
      influence code generation, or to parameters that influence SVRL to XVRL conversion.</para>
    <para>There are multiple Schematron implementations. How the Schematron implementation is selected is implementation-defined. A processor might
      select an implementation based on the schema’s <code role="attribute">queryBinding</code> attribute and/or provide configuration options. In
      addition, the special parameter map entry <literal>c:implementation</literal> (value: QName) may be used to select a Schematron implementation
      that the processor supports. The list of supported Schematron implementations and their associated values is implementation-defined. If a
      requested implementation is not available, the processor may throw an error or select another implementation.</para>
    <para>The <option>parameters</option> map may contain two special entries, <literal>c:compile</literal> and <literal>c:xvrl</literal>, both are
      maps. If a code-generating implementation such as <emphasis>Schematron “Skeleton” implementation 2017</emphasis> is used, the entries of the
        <literal>c:compile</literal> map, for example <literal>allow-foreign</literal>, will be passed to the code generator. Which parameters the
        <literal>c:compile</literal> map supports for a given Schematron implementation is implementation-defined.</para>
    <para>If the Schematron implementation produces SVRL by default, the SVRL to XVRL conversion can be influenced by the entries of the
        <literal>c:xvrl</literal> map. The same map, with potentially another set of allowed keys and values, can be used to influence XVRL generation
      from another reporting language. Which parameters this conversion from native reporting format to XVRL supports is
      implementation-defined.</para>
    <para>All other parameters of the <option>parameters</option> option will be passed to the generated code if applicable, or to a hypothetical
      native Schematron validator that does without code generation.</para>
    <para>The <port>result</port> output from this step is a copy of the input.</para>
    <para>The output of this step may include PSVI annotations.</para>
    <bridgehead>Document properties</bridgehead>
    <para feature="validate-with-schematron-preserves-all">All document properties on the <port>source</port> port are preserved on the
        <port>result</port> port. No document properties are preserved on the <port>report</port> port.</para>
  </description>
  <step-errors>
    <step-error code="XC0151"/>
    <step-error code="XC0054"/>
  </step-errors>
</step>
