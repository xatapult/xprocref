<?xml version="1.0" encoding="UTF-8"?>
<xtlcon:document-container production-version="false" limit-to-steps="message identity rename" wip="false" limit-to-latest-version="false"
  all-steps-count="142" processed-steps-count="5" timestamp="2025-04-02T14:00:57.8205797+02:00" xmlns:xtlcon="http://www.xtpxlib.nl/ns/container">
  <xtlcon:document type="index">
    <xprocref-index xmlns="http://www.xtpxlib.nl/ns/xprocref">
      <versionref id="v31" name="3.1">
        <stepref id="step.v31.identity.d67e34199">
          <categoryref id="standard-steps"/>
          <categoryref id="misc"/>
          <other-versionref id="v30" step-id="step.v30.identity.d67e9772"/>
        </stepref>
        <stepref id="step.v31.message.d67e36110">
          <categoryref id="standard-steps"/>
          <categoryref id="misc"/>
        </stepref>
        <stepref id="step.v31.rename.d67e36926">
          <categoryref id="standard-steps"/>
          <categoryref id="basic-xml-manipulation"/>
          <other-versionref id="v30" step-id="step.v30.rename.d67e12516"/>
        </stepref>
        <categoryref id="standard-steps">
          <stepref id="step.v31.identity.d67e34199"/>
          <stepref id="step.v31.message.d67e36110"/>
          <stepref id="step.v31.rename.d67e36926"/>
        </categoryref>
        <categoryref id="basic-xml-manipulation">
          <stepref id="step.v31.rename.d67e36926"/>
        </categoryref>
        <categoryref id="misc">
          <stepref id="step.v31.identity.d67e34199"/>
          <stepref id="step.v31.message.d67e36110"/>
        </categoryref>
      </versionref>
      <versionref id="v30" name="3.0">
        <stepref id="step.v30.identity.d67e9772">
          <categoryref id="standard-steps"/>
          <categoryref id="misc"/>
          <other-versionref id="v31" step-id="step.v31.identity.d67e34199"/>
        </stepref>
        <stepref id="step.v30.rename.d67e12516">
          <categoryref id="standard-steps"/>
          <categoryref id="basic-xml-manipulation"/>
          <other-versionref id="v31" step-id="step.v31.rename.d67e36926"/>
        </stepref>
        <categoryref id="standard-steps">
          <stepref id="step.v30.identity.d67e9772"/>
          <stepref id="step.v30.rename.d67e12516"/>
        </categoryref>
        <categoryref id="basic-xml-manipulation">
          <stepref id="step.v30.rename.d67e12516"/>
        </categoryref>
        <categoryref id="misc">
          <stepref id="step.v30.identity.d67e9772"/>
        </categoryref>
      </versionref>
    </xprocref-index>
  </xtlcon:document>
  <!-- == MAIN PAGES: == -->
  <xtlcon:document href-target="index.html" content-type="text/html" keywords="" type="all-steps-for-version" version-id="v31">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e48">
        <db:title>XProc steps (3.1)</db:title>
        <db:para>Steps for XProc version 3.1. You can also view these steps <db:link xlink:href="3.1/categories.html"
            xmlns:xlink="http://www.w3.org/1999/xlink">by category</db:link>.</db:para>
        <db:para/>
        <db:para role="step-start-character-list"><db:xref linkend="steps_I"/>  <db:xref linkend="steps_M"/>  <db:xref linkend="steps_R"/></db:para>
        <db:sect2 xml:id="steps_I">
          <db:title role="step-list-start-character">I</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="3.1/p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</db:link> - Copies the source
                to the result without modifications.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_M">
          <db:title role="step-list-start-character">M</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="3.1/p.message.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:message</db:link> - Produces a
                message.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_R">
          <db:title role="step-list-start-character">R</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="3.1/p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:rename</db:link> - Renames nodes in a
                document.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="versions.html" content-type="text/html" keywords="versions" type="versions-overview">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e96">
        <db:title>XProc versions</db:title>
        <db:itemizedlist role="versions-list">
          <db:listitem>
            <db:para>
              <db:link xlink:href="index.html" xmlns:xlink="http://www.w3.org/1999/xlink">Version 3.1</db:link>
            </db:para>
            <db:para>This is an update of the 3.0 specification. Its core specification can be found <db:link
                ns0:href="https://spec.xproc.org/master/head/xproc/" role="newpage" xmlns:ns0="http://www.w3.org/1999/xlink">here</db:link>.</db:para>
            <db:para>Although still under construction, it’s considered the most current and up-to-date version. Development is almost
              finished.</db:para>
          </db:listitem>
          <db:listitem>
            <db:para>
              <db:link xlink:href="3.0/index.html" xmlns:xlink="http://www.w3.org/1999/xlink">Version 3.0</db:link>
            </db:para>
            <db:para>This is the first official XProc 3.0 specification (12 September 2022). Its core specification can be found <db:link
                ns0:href="https://spec.xproc.org/3.0/xproc/" role="newpage" xmlns:ns0="http://www.w3.org/1999/xlink">here</db:link>.</db:para>
          </db:listitem>
        </db:itemizedlist>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="error-codes.html" content-type="text/html" keywords="errors" type="error-codes">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e126">
        <db:title>Error codes (all versions)</db:title>
        <db:para role="break-after">All errors are in the <db:code>http://www.w3.org/ns/xproc-error</db:code> namespace (recommended prefix:
            <db:code>err</db:code>).</db:para>
        <db:table role="nonumber error-codes-table">
          <db:title/>
          <db:tgroup cols="2">
            <db:thead>
              <db:row>
                <db:entry>
                  <db:para>Error code</db:para>
                </db:entry>
                <db:entry>
                  <db:para>Description</db:para>
                </db:entry>
              </db:row>
            </db:thead>
            <db:tbody>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0001">
                    <db:code>XC0001</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the value of option <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >override-content-type</code> is not a text media type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0003">
                    <db:code>XC0003</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a “<db:literal>username</db:literal>” or a “<db:literal>password</db:literal>” key is present
                    without specifying a value for the “<db:literal>auth-method</db:literal>” key, if the requested
                      <db:literal>auth-method</db:literal> isn't supported, or the authentication challenge contains an authentication method that
                    isn't supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0007">
                    <db:code>XC0007</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any key in <code role="option" xmlns="http://docbook.org/ns/docbook">parameters</code> is
                    associated to a value which is not an instance of the XQuery 1.0 and XPath 2.0 Data Model, e.g. with a map, an array, or a
                    function.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0008">
                    <db:code>XC0008</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the stylesheet does not support a given mode.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0009">
                    <db:code>XC0009</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the specified XQuery version is not available.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0011">
                    <db:code>XC0011</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the specified schema version is not available.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0012">
                    <db:code>XC0012</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the contents of the directory path are not available to the step due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0013">
                    <db:code>XC0013</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the pattern matches a processing instruction and the new name has a non-null namespace.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0014">
                    <db:code>XC0014</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the XML namespace (<db:uri>http://www.w3.org/XML/1998/namespace</db:uri>) or the XMLNS namespace
                      (<db:uri>http://www.w3.org/2000/xmlns/</db:uri>) is the value of either the <code role="option"
                      xmlns="http://docbook.org/ns/docbook">from</code> option or the <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >to</code> option.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0017">
                    <db:code>XC0017</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the absolute path does not identify a directory.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0019">
                    <db:code>XC0019</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the documents are not equal according to the specified comparison <code role="option"
                      xmlns="http://docbook.org/ns/docbook">method</code>, and the value of the <code role="option"
                      xmlns="http://docbook.org/ns/docbook">fail-if-not-equal</code> option is <db:literal>true</db:literal>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0023">
                    <db:code>XC0023</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the selection pattern matches a wrong type of node.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0024">
                    <db:code>XC0024</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the selection pattern matches a document node and the value of the <code role="option"
                      xmlns="http://docbook.org/ns/docbook">position</code> is “<db:literal>before</db:literal>” or
                    “<db:literal>after</db:literal>”.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0025">
                    <db:code>XC0025</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the selection pattern matches anything other than an element or a document node and the value of
                    the <code role="option" xmlns="http://docbook.org/ns/docbook">position</code> option is “<db:literal>first-child</db:literal>” or
                      “<db:literal>last-child</db:literal>”.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0029">
                    <db:code>XC0029</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an XInclude error occurs during processing.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0030">
                    <db:code>XC0030</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the response body cannot be interpreted as requested (e.g.
                      <db:literal>application/json</db:literal> to override <db:literal>application/xml</db:literal> content).</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0032">
                    <db:code>XC0032</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if more than one document appears on the <code role="port" xmlns="http://docbook.org/ns/docbook"
                      >source</code> port of the <db:tag>p:os-exec</db:tag> step.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0033">
                    <db:code>XC0033</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the command cannot be run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0034">
                    <db:code>XC0034</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the current working directory cannot be changed to the value of the <code role="option"
                      xmlns="http://docbook.org/ns/docbook">cwd</code> option.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0036">
                    <db:code>XC0036</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the requested hash algorithm is not one that the processor understands or if the value or
                    parameters are not appropriate for that algorithm.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0037">
                    <db:code>XC0037</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">value</code> provided is not a
                    properly <db:literal>x-www-form-urlencoded</db:literal> value.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0038">
                    <db:code>XC0038</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the specified xslt version is not available.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0039">
                    <db:code>XC0039</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the source port does not contain exactly one XML document or one HTML document if XSLT 1.0 is
                    used.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0050">
                    <db:code>XC0050</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error the file or directory cannot be copied to the specified location.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0053">
                    <db:code>XC0053</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">assert-valid</code> option on
                      <db:tag>p:validate-with-nvdl</db:tag> is <db:literal>true</db:literal> and the input document is not valid.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0054">
                    <db:code>XC0054</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">assert-valid</code> option is
                      <db:literal>true</db:literal> and any Schematron assertions fail.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0055">
                    <db:code>XC0055</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the implementation does not support the specified mode.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0056">
                    <db:code>XC0056</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the stylesheet does not provide a given template.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0058">
                    <db:code>XC0058</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">all</code> and <code role="option"
                      xmlns="http://docbook.org/ns/docbook">relative</code> options are both <db:code>true</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0059">
                    <db:code>XC0059</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the QName value in the <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >attribute-name</code> option uses the prefix “<db:literal>xmlns</db:literal>” or any other prefix that resolves to the
                    namespace name <db:uri>http://www.w3.org/2000/xmlns/</db:uri>. </db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0060">
                    <db:code>XC0060</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the processor does not support the specified <code role="option"
                      xmlns="http://docbook.org/ns/docbook">version</code> of the UUID algorithm.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0062">
                    <db:code>XC0062</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">match</code> option matches a
                    namespace node.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0063">
                    <db:code>XC0063</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">path-separator</code> option is
                    specified and is not exactly one character long.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0064">
                    <db:code>XC0064</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the exit code from the command is greater than the specified <code role="option"
                      xmlns="http://docbook.org/ns/docbook">failure-threshold</code> value.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0069">
                    <db:code>XC0069</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">properties</code> map contains a key
                    equal to the string “<db:literal>content-type</db:literal>”.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0071">
                    <db:code>XC0071</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag>p:cast-content-type</db:tag> step cannot perform the requested cast.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0072">
                    <db:code>XC0072</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag>c:data</db:tag> contains content is not a valid base64 string.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0073">
                    <db:code>XC0073</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag>c:data</db:tag> element does not have a <db:tag class="attribute"
                      >content-type</db:tag> attribute.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0074">
                    <db:code>XC0074</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">content-type</code> is supplied and
                    is not the same as the <db:tag class="attribute">content-type</db:tag> specified on the <db:tag>c:data</db:tag> element.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0076">
                    <db:code>XC0076</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the comparison <code role="option" xmlns="http://docbook.org/ns/docbook">method</code> specified
                    in <db:tag>p:compare</db:tag> is not supported by the implementation.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0077">
                    <db:code>XC0077</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the media types of the documents supplied are incompatible with the comparison <code role="option"
                      xmlns="http://docbook.org/ns/docbook">method</code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0078">
                    <db:code>XC0078</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the value associated with the “<db:literal>fail-on-timeout</db:literal>” is associated with
                      <db:code>true()</db:code> and a HTTP status code <db:literal>408</db:literal> is encountered.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0079">
                    <db:code>XC0079</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the map <code role="option" xmlns="http://docbook.org/ns/docbook">parameters</code> contains an
                    entry whose key is defined by the implementation and whose value is not valid for that key.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0080">
                    <db:code>XC0080</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the number of documents on the <code role="port" xmlns="http://docbook.org/ns/docbook"
                      >archive</code> does not match the expected number of archive input documents for the given <db:code>format</db:code> and
                      <db:code>command</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0081">
                    <db:code>XC0081</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the format of the archive does not match the format as specified in the <code role="option"
                      xmlns="http://docbook.org/ns/docbook">format</code> option.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0083">
                    <db:code>XC0083</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag class="attribute">namespace</db:tag> attribute is specified, the <db:tag
                      class="attribute">name</db:tag> contains a colon, and the specified namespace is not the same as the in-scope namespace binding
                    for the specified prefix.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0084">
                    <db:code>XC0084</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if two or more documents appear on the <db:code>p:archive</db:code> step's <code role="port"
                      xmlns="http://docbook.org/ns/docbook">source</code> port that have the same base URI or if any document that appears on the
                      <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port has no base URI.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0085">
                    <db:code>XC0085</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the format of the archive does not match the specified format, cannot be understood, determined
                    and/or processed.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0086">
                    <db:code>XC0086</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error for any unqualified attribute names to appear on a <db:tag>c:param-set</db:tag> element.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0087">
                    <db:code>XC0087</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag class="attribute">namespace</db:tag> attribute is not specified, the <db:tag
                      class="attribute">name</db:tag> contains a colon, and the specified prefix is not in the in-scope namespace bindings.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0089">
                    <db:code>XC0089</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the sequence type is not syntactically valid.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0090">
                    <db:code>XC0090</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support directory listing for a specified scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0092">
                    <db:code>XC0092</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if as a consequence of changing or removing the namespace of an attribute the attribute's name is not
                    unique on the respective element.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0093">
                    <db:code>XC0093</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para> It is a dynamic error if a static error occurs during the static analysis of the XSLT stylesheet.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0094">
                    <db:code>XC0094</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any document supplied on the source port is not an XML document, an HTML documents, or a Text
                    document if XSLT 2.0 is used.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0095">
                    <db:code>XC0095</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an error occurred during the transformation.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0096">
                    <db:code>XC0096</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the transformation is terminated by XSLT message termination.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0098">
                    <db:code>XC0098</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a dynamic XPath error occurred while applying sort-key to a line.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0099">
                    <db:code>XC0099</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the result of applying <db:code>sort-key</db:code> to a given line results in a sequence with more
                    than one item.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0100">
                    <db:code>XC0100</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the document on port <code role="port" xmlns="http://docbook.org/ns/docbook">manifest</code> does
                    not conform to the given schema.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0101">
                    <db:code>XC0101</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a document appearing on port <code role="port" xmlns="http://docbook.org/ns/docbook">source</code>
                    cannot be represented in the XDM version associated with the chosen XQuery version, e.g. when a JSON document contains a map and
                    XDM 3.0 is used.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0102">
                    <db:code>XC0102</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any key in option <code role="option" xmlns="http://docbook.org/ns/docbook">parameters</code> is
                    associated to a value that cannot be represented in the XDM version associated with the chosen XQuery version, e.g. with a map, an
                    array, or a function when XDM 3.0 is used.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0103">
                    <db:code>XC0103</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any error occurs during XQuery’s static analysis phase.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0104">
                    <db:code>XC0104</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any error occurs during XQuery’s dynamic evaluation phase.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0105">
                    <db:code>XC0105</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an XSLT 1.0 stylesheet is invoked and option <code role="option"
                      xmlns="http://docbook.org/ns/docbook">parameters</code> contains a value that is not an atomic value or a node.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0106">
                    <db:code>XC0106</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if duplicate keys are encountered and option <code role="option"
                      xmlns="http://docbook.org/ns/docbook">duplicates</code> has value “<db:literal>reject</db:literal>”.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0107">
                    <db:code>XC0107</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para> It is a dynamic error if a document of a not supported document type appears on port <code role="port"
                      xmlns="http://docbook.org/ns/docbook">source</code> of <db:code>p:json-merge</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0108">
                    <db:code>XC0108</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any prefix is not in-scope at the point where the <code role="step"
                      xmlns="http://docbook.org/ns/docbook"/> occurs.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0109">
                    <db:code>XC0109</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a namespace is to be removed from an attribute and the element already has an attribute with the
                    resulting name. For instance, removing the namespace with the <db:code>ns1</db:code> prefix will raise this error when applied to
                      <db:tag>something ns1:status="ok" status="bad"/</db:tag>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0110">
                    <db:code>XC0110</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the evaluation of the XPath expression in option <code role="option"
                      xmlns="http://docbook.org/ns/docbook">key</code> for a given item returns either a sequence, an array, a map, or a
                    function.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0111">
                    <db:code>XC0111</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para> It is a dynamic error if a document of an unsupported document type appears on port <code role="port"
                      xmlns="http://docbook.org/ns/docbook">source</code> of <db:code>p:json-join</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0112">
                    <db:code>XC0112</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if more than one document appears on the port <code role="port" xmlns="http://docbook.org/ns/docbook"
                      >manifest</code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0113">
                    <db:code>XC0113</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an attempt is made to delete a non-empty directory and the <code role="option"
                      xmlns="http://docbook.org/ns/docbook">recursive</code> option was set to <db:code>false</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0114">
                    <db:code>XC0114</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the directory referenced by the <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >href</code> option cannot be created.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0115">
                    <db:code>XC0115</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the resource referenced by the <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >target</code> option is an existing file or other file system object.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0116">
                    <db:code>XC0116</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the temporary file could not be created.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0117">
                    <db:code>XC0117</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a report-format option was specified that the processor does not support.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0118">
                    <db:code>XC0118</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an archive manifest is invalid according to the specification.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0119">
                    <db:code>XC0119</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <code role="option" xmlns="http://docbook.org/ns/docbook">flatten</code> is neither
                      “<db:literal>unbounded</db:literal>”, nor a string that may be cast to a non-negative integer.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0120">
                    <db:code>XC0120</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">relative-to</code> option is not
                    present and the document on the <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port does not have a base
                    URI.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0121">
                    <db:code>XC0121</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a document appearing on the <code role="port" xmlns="http://docbook.org/ns/docbook"
                      >secondary</code> port has a base URI that is not both absolute and valid according to <db:link
                      xlink:href="https://www.rfc-editor.org/info/rfc3986" role="newpage" xmlns:xlink="http://www.w3.org/1999/xlink"
                      >RFC 3986</db:link> .</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0122">
                    <db:code>XC0122</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the given method is not supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0123">
                    <db:code>XC0123</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any key in the “<db:literal>auth</db:literal>” map is associated with a value that is not an
                    instance of the required type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0124">
                    <db:code>XC0124</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any key in the “parameters” map is associated with a value that is not an instance of the required
                    type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0125">
                    <db:code>XC0125</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the key “<db:literal>accept-multipart</db:literal>” as the value <db:code>false()</db:code> and a
                    multipart response is detected.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0126">
                    <db:code>XC0126</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the XPath expression in <code role="option" xmlns="http://docbook.org/ns/docbook">assert</code>
                    evaluates to <db:code>false</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0127">
                    <db:code>XC0127</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">headers</code> map contains two keys
                    that are the same when compared in a case-insensitive manner.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0128">
                    <db:code>XC0128</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the URI’s scheme is unknown or not supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0129">
                    <db:code>XC0129</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the requested HTTP version is not supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0131">
                    <db:code>XC0131</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the processor cannot support the requested encoding.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0132">
                    <db:code>XC0132</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the override content encoding cannot be supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0133">
                    <db:code>XC0133</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if more than one document appears on the <code role="port" xmlns="http://docbook.org/ns/docbook"
                      >source</code> port and a <db:literal>content-type</db:literal> header is present and the content type specified is not a
                    multipart content type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0134">
                    <db:code>XC0134</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-info</db:tag> for a specified scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0135">
                    <db:code>XC0135</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-info</db:tag> is not available to the step due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0136">
                    <db:code>XC0136</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-touch</db:tag> for a specified scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0137">
                    <db:code>XC0137</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-touch</db:tag> cannot be completed due to access restrictions in the environment in
                    which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0138">
                    <db:code>XC0138</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-create-tempfile</db:tag> for a specified
                    scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0139">
                    <db:code>XC0139</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-create-tempfile</db:tag> cannot be completed due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0140">
                    <db:code>XC0140</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-mkdir</db:tag> for a specified scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0141">
                    <db:code>XC0141</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-mkdir</db:tag> not available to the step due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0142">
                    <db:code>XC0142</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-delete</db:tag> for a specified
                    scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0143">
                    <db:code>XC0143</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-delete</db:tag> is not available to the step due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0144">
                    <db:code>XC0144</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-copy</db:tag> for a specified scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0145">
                    <db:code>XC0145</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-copy</db:tag> is not available to the step due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0146">
                    <db:code>XC0146</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the specified value for the <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >override-content-types</code> option is not an array of arrays, where the inner arrays have exactly two members of type
                      <db:code>xs:string</db:code>.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0147">
                    <db:code>XC0147</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the specified value is not a valid XPath regular expression.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0148">
                    <db:code>XC0148</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if an implementation does not support <db:tag>p:file-move</db:tag> for a specified scheme.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0149">
                    <db:code>XC0149</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if <db:tag>p:file-move</db:tag> is not available to the step due to access restrictions in the
                    environment in which the pipeline is run.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0150">
                    <db:code>XC0150</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if evaluating the XPath expression in option <code role="option"
                      xmlns="http://docbook.org/ns/docbook">test</code> on a context document results in an error.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0151">
                    <db:code>XC0151</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the document supplied on <code role="port" xmlns="http://docbook.org/ns/docbook">schema</code>
                    port is not a valid Schematron document.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0152">
                    <db:code>XC0152</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the document supplied on <code role="port" xmlns="http://docbook.org/ns/docbook">schema</code>
                    port is not a valid XML schema document.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0153">
                    <db:code>XC0153</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the document supplied on <code role="port" xmlns="http://docbook.org/ns/docbook">schema</code>
                    port cannot be interpreted as an RELAX NG Grammar. </db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0154">
                    <db:code>XC0154</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the document supplied on <code role="port" xmlns="http://docbook.org/ns/docbook">nvdl</code> port
                    is not a valid NVDL document.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0155">
                    <db:code>XC0155</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">assert-valid</code> option on
                      <db:tag>p:validate-with-relax-ng</db:tag> is <db:literal>true</db:literal> and the input document is not valid.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0156">
                    <db:code>XC0156</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">assert-valid</code> option on
                      <db:tag>p:validate-with-xml-schema</db:tag> is <db:literal>true</db:literal> and the input document is not valid.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0157">
                    <db:code>XC0157</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">href</code> option names a
                    directory, but the <code role="option" xmlns="http://docbook.org/ns/docbook">target</code> option names a file.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0158">
                    <db:code>XC0158</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">href</code> option names a
                    directory, but the <code role="option" xmlns="http://docbook.org/ns/docbook">target</code> option names a file.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0159">
                    <db:code>XC0159</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any key in the “<db:literal>auth</db:literal>” map is associated with a value that is not an
                    instance of the required type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0160">
                    <db:code>XC0160</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if any key in the “<db:literal>parameters</db:literal>” map is associated with a value that is not an
                    instance of the required type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0161">
                    <db:code>XC0161</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the first document on the <code role="port" xmlns="http://docbook.org/ns/docbook">source</code>
                    port does not conform to the required format.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0162">
                    <db:code>XC0162</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the email cannot be send.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0163">
                    <db:code>XC0163</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the selected version is not supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0164">
                    <db:code>XC0164</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the document supplied on <code role="port" xmlns="http://docbook.org/ns/docbook">schema</code>
                    port is not a valid JSON schema document in the selected version.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0165">
                    <db:code>XC0165</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">assert-valid</code> option on
                      <db:tag>p:validate-with-json-schema</db:tag> is <db:literal>true</db:literal> and the input document is not valid.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0166">
                    <db:code>XC0166</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the requested document cannot be produced.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0167">
                    <db:code>XC0167</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the requested document cannot be produced.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0200">
                    <db:code>XC0200</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the pipeline input to the p:run step is not a valid pipeline.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0201">
                    <db:code>XC0201</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag>p:uncompress</db:tag> step cannot perform the requested content-type cast.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0202">
                    <db:code>XC0202</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the compression format cannot be understood, determined and/or processed.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0203">
                    <db:code>XC0203</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the specified boundary is not valid (for example, if it begins with two hyphens “--”).</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0204">
                    <db:code>XC0204</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the requested content-type is not supported.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0205">
                    <db:code>XC0205</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the source document cannot be parsed by the provided grammar.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0206">
                    <db:code>XC0206</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the dynamically executed pipeline implicitly or explicitly declares a primary input port with a
                    different name than implicitly or explicitly specified in the p:run invocation.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0207">
                    <db:code>XC0207</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the dynamically executed pipeline implicitly or explicitly declares a primary output port with a
                    different name than implicitly or explicitly specified in the p:run invocation.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0210">
                    <db:code>XC0210</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">assert-valid</code> option on
                      <db:tag>p:validate-with-dtd</db:tag> is <db:literal>true</db:literal> and the input document is not valid.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0211">
                    <db:code>XC0211</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if more than one document appears on the <code role="port" xmlns="http://docbook.org/ns/docbook"
                      >grammar</code> port.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XC0212">
                    <db:code>XC0212</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the grammar provided is not a valid Invisible XML grammar.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0011">
                    <db:code>XD0011</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the resource referenced by the <code role="option" xmlns="http://docbook.org/ns/docbook"
                      >href</code> option does not exist, cannot be accessed or is not a file.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0023">
                    <db:code>XD0023</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a DTD validation is performed and either the document is not valid or no DTD is found.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0036">
                    <db:code>XD0036</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the supplied value of a variable or option cannot be converted to the required type.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0043">
                    <db:code>XD0043</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <code role="option" xmlns="http://docbook.org/ns/docbook">dtd-validate</code> parameter is
                      <db:literal>true</db:literal> and the processor does not support DTD validation.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0049">
                    <db:code>XD0049</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the text value is not a well-formed XML document</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0057">
                    <db:code>XD0057</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the text document does not conform to the JSON grammar, unless the parameter liberal is true and
                    the processor chooses to accept the deviation.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0058">
                    <db:code>XD0058</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the parameter duplicates is reject and the text document contains a JSON object with duplicate
                    keys.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0059">
                    <db:code>XD0059</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the parameter map contains an entry whose key is defined in the specification of
                      <db:function>fn:parse-json</db:function> and whose value is not valid for that key, or if it contains an entry with the key
                    fallback when the parameter <db:literal>escape</db:literal> with <db:literal>true()</db:literal> is also present.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0060">
                    <db:code>XD0060</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the text document can not be converted into the XPath data model</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0062">
                    <db:code>XD0062</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the <db:tag class="attribute">content-type</db:tag> is specified and the document-properties has a
                      “<db:code>content-type</db:code>” that is not the same.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0064">
                    <db:code>XD0064</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the base URI is not both absolute and valid according to <db:link
                      xlink:href="https://www.rfc-editor.org/info/rfc3986" role="newpage" xmlns:xlink="http://www.w3.org/1999/xlink"
                      >RFC 3986</db:link> .</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0070">
                    <db:code>XD0070</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a value is assigned to the <db:code>serialization</db:code> document property that cannot be
                    converted into <db:code>map(xs:QName, item()*)</db:code> according to the rules in section “QName handling” of <db:link
                      xlink:href="https://xproc.org/" role="newpage" xmlns:xlink="http://www.w3.org/1999/xlink">XProc 3.0</db:link> .</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0078">
                    <db:code>XD0078</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if the loaded document cannot be represented as an HTML document in the XPath data model.</db:para>
                </db:entry>
              </db:row>
              <db:row>
                <db:entry>
                  <db:para xml:id="error-XD0079">
                    <db:code>XD0079</db:code>
                  </db:para>
                </db:entry>
                <db:entry>
                  <db:para>It is a dynamic error if a supplied content-type is not a valid media type of the form “<db:literal>
                      <db:replaceable>type</db:replaceable>/<db:replaceable>subtype</db:replaceable>+<db:replaceable>ext</db:replaceable>
                    </db:literal>” or “<db:literal>
                      <db:replaceable>type</db:replaceable>/<db:replaceable>subtype</db:replaceable>
                    </db:literal>”.</db:para>
                </db:entry>
              </db:row>
            </db:tbody>
          </db:tgroup>
        </db:table>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="namespaces.html" content-type="text/html" keywords="namespaces namespace" type="namespaces">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e1870">
        <db:title>Namespaces used (all versions)</db:title>
        <db:itemizedlist>
          <db:listitem>
            <db:para><db:code>http://www.w3.org/ns/xproc</db:code> (recommended prefix: <db:code>p</db:code>)</db:para>
            <db:para>The main XProc namespace, used for all of its elements, steps and some of its attributes.</db:para>
          </db:listitem>
          <db:listitem>
            <db:para><db:code>http://www.w3.org/ns/xproc-step</db:code> (recommended prefix: <db:code>c</db:code>)</db:para>
            <db:para>This namespace is used for documents that are inputs or outputs from several standard and optional steps.</db:para>
          </db:listitem>
          <db:listitem>
            <db:para><db:code>http://www.w3.org/ns/xproc-error</db:code> (recommended prefix: <db:code>err</db:code>)</db:para>
            <db:para>This namespace is used for XProc errors.</db:para>
          </db:listitem>
          <db:listitem>
            <db:para><db:code>http://www.w3.org/2001/XMLSchema</db:code> (recommended prefix: <db:code>xs</db:code>)</db:para>
            <db:para>This namespace is used for data types, such as <db:code>xs:string</db:code> and <db:code>xs:boolean</db:code>.</db:para>
          </db:listitem>
          <db:listitem>
            <db:para><db:code>http://www.w3.org/ns/xproc-http</db:code> (recommended prefix: <db:code>rh</db:code>)</db:para>
            <db:para>The namespace used for specifying request headers in document-properties in the <code role="step"
                xmlns="http://docbook.org/ns/docbook">p:http-request</code> step.</db:para>
          </db:listitem>
        </db:itemizedlist>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="about.html" content-type="text/html" keywords="about" type="about">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e1939">
        <db:title>About XProcRef</db:title>
        <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">The XProcRef site contains reference information about
          the built-in steps in the <link xlink:href="https://xproc.org/" role="newpage">XProc programming language</link>, targeted at language
          users/programmers.</para>
        <para role="break-after" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Please note that the XProcRef step
          descriptions are <emphasis>non-normative</emphasis>. It’s a translation from the official, <emphasis>normative</emphasis>, specification
          into more user-friendly terms. And, yes, things get lost in translation. Sometimes formulations are simplified to make their meaning
          clearer, some details are left-out because they are only important for very rare edge-cases, etc. So if you’re ever in doubt, remember that
          the <link xlink:href="https://xproc.org/specifications.html">XProc specification</link> represents the truth!</para>
        <para role="break-after" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">There is an underlying reason for
          all this. In 2020 I published a book called “XProc 3.0 - Programmer Reference” (for sale <link
            xlink:href="https://xmlpress.net/publications/xproc-3-0/" role="newpage">here</link>):</para>
        <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
          <link xlink:href="https://xmlpress.net/publications/xproc-3-0/" role="newpage">  <inlinemediaobject>
              <imageobject>
                <imagedata fileref="images/bookcover.png" width="15%"/>
              </imageobject>
            </inlinemediaobject></link>
        </para>
        <para role="break-before" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Appendices A and B in the book
          describe the step library. However, due to time constraints, the step descriptions were copied from the formal XProc specification. This
          leaves much to be desired for users of the language: the specification is aimed at XProc processor <emphasis>implementers</emphasis>, not at
          language <emphasis>users</emphasis>. To correct this, this site contains reference information about the XProc steps, written from a more
          user-oriented perspective. With the increasing popularity of XProc, I hope this fills a need.</para>
        <para role="break-before" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Help is always welcome. If you have
          anything to say, add or comment about something on XProcRef, please <link xlink:href="https://github.com/xatapult/xprocref/issues"
            role="newpage">raise an issue</link>. Or for the more adventurous types: fork the <link xlink:href="https://github.com/xatapult/xprocref"
            role="newpage">XProcRef GitHub repository</link>, make the change yourself, and create a pull request. There is a little documentation in
          the <code>doc/</code> subdirectory.</para>
        <para role="break-before" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">Erik Siegel (<link
            xlink:href="mailto:erik@xatapult.nl">erik@xatapult.nl</link>)</para>
        <para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
          <link xlink:href="https://www.xatapult.com/" role="newpage">Xatapult Content Engineering</link>
        </para>
        <db:para> </db:para>
        <db:para role="site-remark">Site published [TEST VERSION]: 2025-04-02 14:00</db:para>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <!-- == PAGES FOR VERSION 3.1 == -->
  <xtlcon:document href-target="3.1/categories.html" content-type="text/html" keywords="categories" type="categories-overview" version-id="v31">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e2015">
        <db:title>Categories (3.1)</db:title>
        <sect2 xml:id="sect2-d119e2018" xmlns="http://docbook.org/ns/docbook">
          <db:title>Primary categories</db:title>
          <db:para>The following categories are defined by the XProc specification itself:</db:para>
          <db:itemizedlist role="category-list">
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
              <db:para>XProc steps that a conformant XProc processor <db:emphasis>must</db:emphasis> support. In other words: whatever processor you
                use for processing your XProc pipelines, you can trust that these steps will always work.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </sect2>
        <sect2 xml:id="sect2-d119e2033" xmlns="http://docbook.org/ns/docbook">
          <db:title>Other categories</db:title>
          <db:para>The following categories are defined by XProcRef:</db:para>
          <db:itemizedlist role="category-list">
            <db:listitem>
              <db:para>
                <db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink">Basic XML manipulation</db:link>
              </db:para>
              <db:para>These steps implement basic XML manipulation, like adding attributes, inserting elements, etc.</db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Miscellaneous.html" xmlns:xlink="http://www.w3.org/1999/xlink">Miscellaneous</db:link>
              </db:para>
              <db:para>Miscellaneous steps, which are usually used for housekeeping purposes in the pipeline.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.1/Standard_XProc_steps.html" content-type="text/html" keywords="category standard" type="category" version-id="v31"
    ref="standard-steps" name="Standard XProc steps">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e2057">
        <db:title>Category: Standard XProc steps (3.1) <db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink"
              ><db:inlinemediaobject role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/next.png" width="1.5%"
                /></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>XProc steps that a conformant XProc processor <db:emphasis>must</db:emphasis> support. In other words: whatever processor you use for
          processing your XProc pipelines, you can trust that these steps will always work.</db:para>
        <db:para role="step-start-character-list"><db:xref linkend="steps_I"/>  <db:xref linkend="steps_M"/>  <db:xref linkend="steps_R"/></db:para>
        <db:sect2 xml:id="steps_I">
          <db:title role="step-list-start-character">I</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</db:link> - Copies the source to
                the result without modifications.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_M">
          <db:title role="step-list-start-character">M</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.message.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:message</db:link> - Produces a
                message.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_R">
          <db:title role="step-list-start-character">R</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:rename</db:link> - Renames nodes in a
                document.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.1/Basic_XML_manipulation.html" content-type="text/html" keywords="category xml-manipulation" type="category"
    version-id="v31" ref="basic-xml-manipulation" name="Basic XML manipulation">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e2108">
        <db:title><db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject
              role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
              /></db:imageobject></db:inlinemediaobject></db:link> Category: Basic XML manipulation (3.1) <db:link xlink:href="Miscellaneous.html"
            xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject role="next-prev-marker"><db:imageobject><db:imagedata
                  fileref="../images/next.png" width="1.5%"/></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>These steps implement basic XML manipulation, like adding attributes, inserting elements, etc.</db:para>
        <db:itemizedlist role="step-list">
          <db:listitem>
            <db:para><db:link xlink:href="p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:rename</db:link> - Renames nodes in a
              document.</db:para>
          </db:listitem>
        </db:itemizedlist>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.1/Miscellaneous.html" content-type="text/html" keywords="category miscellaneous" type="category" version-id="v31"
    ref="misc" name="Miscellaneous">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e2134">
        <db:title><db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject
              role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
              /></db:imageobject></db:inlinemediaobject></db:link> Category: Miscellaneous (3.1)</db:title>
        <db:para>Miscellaneous steps, which are usually used for housekeeping purposes in the pipeline.</db:para>
        <db:para role="step-start-character-list"><db:xref linkend="steps_I"/>  <db:xref linkend="steps_M"/></db:para>
        <db:sect2 xml:id="steps_I">
          <db:title role="step-list-start-character">I</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</db:link> - Copies the source to
                the result without modifications.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_M">
          <db:title role="step-list-start-character">M</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.message.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:message</db:link> - Produces a
                message.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.1/p.identity.html" content-type="text/html" keywords="step p:identity identity" type="step" version-id="v31"
    ref="p:identity" name="p:identity">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version! (step published: true)</db:para>
      <db:sect1 xml:id="sect1-d119e2171">
        <db:title>p:identity (3.1) <db:link xlink:href="p.message.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject
              role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/next.png" width="1.5%"
              /></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>Copies the source to the result without modifications.</db:para>
        <itemizedlist role="toc toc-2" xmlns="http://docbook.org/ns/docbook">
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2180" xmlns:xlink="http://www.w3.org/1999/xlink">Summary</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2272" xmlns:xlink="http://www.w3.org/1999/xlink">Description</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2285" xmlns:xlink="http://www.w3.org/1999/xlink">Examples</link>
            </para>
            <itemizedlist role="toc toc-3">
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e2288" xmlns:xlink="http://www.w3.org/1999/xlink">Create a fixed document</link>
                </para>
              </listitem>
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e2314" xmlns:xlink="http://www.w3.org/1999/xlink">Create an explicit anchor points in your
                    pipeline</link>
                </para>
              </listitem>
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e2340" xmlns:xlink="http://www.w3.org/1999/xlink">Produce a processing message</link>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2354" xmlns:xlink="http://www.w3.org/1999/xlink">Additional details</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2368" xmlns:xlink="http://www.w3.org/1999/xlink">Reference information</link>
            </para>
          </listitem>
        </itemizedlist>
        <db:sect2 xml:id="sect2-d119e2180">
          <db:title>Summary</db:title>
          <db:programlisting role="step-signature">&lt;p:declare-step type="p:identity"&gt; &lt;input port="source" primary="true" content-types="any"
            sequence="true"/&gt; &lt;output port="result" primary="true" content-types="any" sequence="true"/&gt;
            &lt;/p:declare-step&gt;</db:programlisting>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step makes a verbatim copy of what appears on its
              <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port to its <code role="port"
              xmlns="http://docbook.org/ns/docbook">result</code> port.</db:para>
          <db:para role="table-header">Ports:</db:para>
          <db:table role="nonumber ports-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Port</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Primary?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Content types</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Seq?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>source</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>input</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>any</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The source document(s)</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>result</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>output</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>any</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The resulting document(s). These will be exactly the same as what appeared on the <code role="port"
                        xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2272">
          <db:title>Description</db:title>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step does… nothing. It makes a verbatim copy of all
            documents appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port to its <code role="port"
              xmlns="http://docbook.org/ns/docbook">result</code> port. Although it doesn’t do anything, it is actually extremely useful and virtually
            indispensable. The examples below show some use cases.</db:para>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2285">
          <db:title>Examples</db:title>
          <db:sect3 xml:id="sect3-d119e2288">
            <db:title>Create a fixed document</db:title>
            <db:para>There are many situations where you need to create a fixed document in your pipeline. For instance:</db:para>
            <db:itemizedlist>
              <db:listitem>
                <db:para>On an error catch you want some <db:tag>error …</db:tag> element as result:</db:para>
                <db:programlisting xml:space="preserve">&lt;p:catch&gt;&#xD;
  &lt;p:identity&gt;&#xD;
    &lt;p:with-input&gt;&#xD;
      &lt;error … /&gt;&#xD;
    &lt;/p:with-input&gt;&#xD;
  &lt;/p:identity&gt;&#xD;
&lt;/p:catch&gt;&#xD;
</db:programlisting>
              </db:listitem>
              <db:listitem>
                <db:para>Some pipelines write their main results to disk and the actual output of the pipeline doesn’t matter. In these cases it is
                  often useful to produce some kind of report document with relevant information (for instance, when it happened, where the results
                  are, etc.):</db:para>
                <db:programlisting xml:space="preserve">&lt;p:identity&gt;&#xD;
  &lt;p:with-input&gt;&#xD;
    &lt;report timestamp="{current-dateTime()}" href-result="{$href-result-location}" … /&gt;&#xD;
  &lt;/p:with-input&gt;&#xD;
&lt;/p:identity&gt;&#xD;
</db:programlisting>
              </db:listitem>
            </db:itemizedlist>
          </db:sect3>
          <db:sect3 xml:id="sect3-d119e2314">
            <db:title>Create an explicit anchor points in your pipeline</db:title>
            <db:para>Because the <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step does’t do anything, it can be used to
              create “anchor points” in your pipeline. Assume you have a complicated pipeline where some version of the document flowing through must
              be used somewhere else. The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step can be used to mark such a
              location explicitly. In the following example an anchor point called <db:code>raw-version</db:code> is created and, later on, referred
              to:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0"&gt;&#xD;
&#xD;
  &lt;!-- Some complicated computations… --&gt;&#xD;
&#xD;
  &lt;p:identity name="raw-version"/&gt;&#xD;
&#xD;
  &lt;!-- Some more complicated computations… --&gt;&#xD;
&#xD;
  &lt;!-- And then a step refers back to the raw version: --&gt;&#xD;
  &lt;p:insert match="/*" position="first-child"&gt;&#xD;
    &lt;p:port port="insertion" pipe="@raw-version"/&gt;&#xD;
  &lt;/p:insert&gt;&#xD;
&#xD;
  &lt;!-- And some more computations… --&gt;&#xD;
&#xD;
&lt;/p:declare-step&gt;&#xD;
</db:programlisting>
            <db:para>You could also achieve this by using the <db:code>name="raw-version"</db:code> attribute on the last step of the first batch of
              computations. However, by using an explicit <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step it stands out
              in the code. Also, when the computations change (and they will), you don’t have to remember to keep the
                <db:code>name="raw-version"</db:code> attribute on the <db:emphasis>last</db:emphasis> one always.</db:para>
          </db:sect3>
          <db:sect3 xml:id="sect3-d119e2340">
            <db:title>Produce a processing message</db:title>
            <db:para>XProc has a <db:code>message</db:code> attribute (or <db:code>p:message</db:code> on steps not in the XProc namespace) that
              results in a message when the pipeline runs. Where this message appears depends on how the pipeline is run. Sometimes you want to
              explicitly produce messages when some point in your pipeline is reached. Since <code role="step" xmlns="http://docbook.org/ns/docbook"
                >p:identity</code> does’t do anything, it is ideal for this:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:identity message="We started processing!"/&gt;&#xD;
&lt;p:identity message="- Input document {$href-input}"/&gt;&#xD;
&lt;p:identity message="- Processing type {$processing-type}"/&gt;</db:programlisting>
          </db:sect3>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2354">
          <db:title>Additional details</db:title>
          <db:itemizedlist>
            <db:listitem>
              <db:para><code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> preserves all document-properties of the document(s)
                appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2368" role="reference-section">
          <db:title>Reference information</db:title>
          <db:para>This description of the <db:code role="step">p:identity</db:code> step is for XProc version: <db:link xlink:href="../index.html"
              xmlns:xlink="http://www.w3.org/1999/xlink">3.1</db:link>. This is a required step (an XProc 3.1 processor must support this).</db:para>
          <db:para>The formal specification for the <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step can be found
              <db:link xlink:href="https://spec.xproc.org/master/head/steps/#c.identity" role="newpage specification-link"
              xmlns:xlink="http://www.w3.org/1999/xlink">here</db:link>.</db:para>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step is part of categories:</db:para>
          <db:itemizedlist>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Miscellaneous.html" xmlns:xlink="http://www.w3.org/1999/xlink">Miscellaneous</db:link>
              </db:para>
            </db:listitem>
          </db:itemizedlist>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step is also present in version: <db:link
              xlink:href="../3.0/p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">3.0</db:link>.</db:para>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.1/p.message.html" content-type="text/html" keywords="step p:message message" type="step" version-id="v31"
    ref="p:message" name="p:message">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version! (step published: true)</db:para>
      <db:sect1 xml:id="sect1-d119e2415">
        <db:title><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject role="next-prev-marker"
                  ><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
          /></db:imageobject></db:inlinemediaobject></db:link> p:message (3.1) <db:link xlink:href="p.rename.html"
            xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject role="next-prev-marker"><db:imageobject><db:imagedata
                  fileref="../images/next.png" width="1.5%"/></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>Produces a message.</db:para>
        <itemizedlist role="toc toc-2" xmlns="http://docbook.org/ns/docbook">
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2428" xmlns:xlink="http://www.w3.org/1999/xlink">Summary</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2596" xmlns:xlink="http://www.w3.org/1999/xlink">Description</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2643" xmlns:xlink="http://www.w3.org/1999/xlink">Examples</link>
            </para>
            <itemizedlist role="toc toc-3">
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e2646" xmlns:xlink="http://www.w3.org/1999/xlink">Basic usage</link>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2712" xmlns:xlink="http://www.w3.org/1999/xlink">Additional details</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2726" xmlns:xlink="http://www.w3.org/1999/xlink">Reference information</link>
            </para>
          </listitem>
        </itemizedlist>
        <db:sect2 xml:id="sect2-d119e2428">
          <db:title>Summary</db:title>
          <db:programlisting role="step-signature">&lt;p:declare-step type="p:message"&gt; &lt;input port="source" primary="true" content-types="any"
            sequence="true"/&gt; &lt;output port="result" primary="true" content-types="any" sequence="true"/&gt; &lt;option name="select"
            as="item()*" required="true"/&gt; &lt;option name="test" as="xs:boolean" required="false" select="true()"/&gt;
            &lt;/p:declare-step&gt;</db:programlisting>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:message</code> step produces a message that is, usually, printed on
            the console. The effect (when the <code role="option" xmlns="http://docbook.org/ns/docbook">test</code> option is <db:code>true</db:code>)
            is the same as using a <db:code>message</db:code>/<db:code>p:message</db:code> attribute on a step.</db:para>
          <db:para role="table-header">Ports:</db:para>
          <db:table role="nonumber ports-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Port</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Primary?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Content types</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Seq?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>source</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>input</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>any</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The source document(s)</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>result</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>output</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>any</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The resulting document(s). These will be exactly the same as what appeared on the <code role="port"
                        xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
          <db:para role="table-header">Options:</db:para>
          <db:table role="nonumber options-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Name</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Req?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Default</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>select</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para><db:code>item()*</db:code> (XPath expression)</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code> </db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The message to produce</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>test</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xs:boolean</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>If <db:code>true</db:code>, the message in the <code role="option" xmlns="http://docbook.org/ns/docbook">select</code>
                      attribute is produced.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2596">
          <db:title>Description</db:title>
          <db:para>Steps in general can produce messages by using the <db:code>message</db:code> (for steps in the XProc namespace) or
              <db:code>p:message</db:code> (for steps in other namespaces) attribute. What “produce” here actually means is implementation-defined and
            therefore depends on the XProc processor used. However, usually it means “printed on the console” and/or “output through
              <db:code>stdout</db:code>”: a command-line message appears when the processor executes the step.</db:para>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:message</code> step is an alternative way to produce these messages.
            When the <code role="option" xmlns="http://docbook.org/ns/docbook">test</code> option is <db:code>true</db:code> (default), the expression
            in the <db:code>select</db:code> option is evaluated and the result is produced/shown, as a message. If the <code role="option"
              xmlns="http://docbook.org/ns/docbook">test</code> option is <db:code>false</db:code>, nothing happens.</db:para>
          <db:para>The step itself, irrespective of the value of the <code role="option" xmlns="http://docbook.org/ns/docbook">test</code> option,
            simply passes what it gets on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port unaltered to its <code
              role="port" xmlns="http://docbook.org/ns/docbook">result</code> port. In other words, it acts as a <code role="step"
              xmlns="http://docbook.org/ns/docbook"><link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink"
              >p:identity</link></code> step.</db:para>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2643">
          <db:title>Examples</db:title>
          <db:sect3 xml:id="sect3-d119e2646">
            <db:title>Basic usage</db:title>
            <db:para>Assume you have a pipeline that does some preliminary things (getting documents, computing variables, etc.) and then starts the
              real computation of something. In-between you want a message that says the computation has started, but only when enabled by an option.
              Here is an example of how to do this using the <code role="step" xmlns="http://docbook.org/ns/docbook">p:message</code> step:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="3.0"&gt;&#xD;
&#xD;
  &lt;p:input port="source"/&gt;&#xD;
  &lt;p:output port="result"/&gt;&#xD;
  &#xD;
  &lt;p:option name="debug-messages-on" as="xs:boolean" select="true()"/&gt;&#xD;
  &#xD;
  &lt;!-- Some preliminary stuff… --&gt;&#xD;
&#xD;
  &lt;p:message test="{$debug-messages-on}" select="'Starting computation at ' || current-dateTime()"/&gt;&#xD;
  &#xD;
  &lt;!-- Steps that implement the computation… --&gt;&#xD;
&#xD;
&lt;/p:declare-step&gt;&#xD;
</db:programlisting>
            <db:para role="break-before">It is certainly possible to implement this without the <code role="step"
                xmlns="http://docbook.org/ns/docbook">p:message</code> step, using a <code role="step" xmlns="http://docbook.org/ns/docbook"><link
                  xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</link></code> step with a
                <db:code>message</db:code> attribute:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="3.0"&gt;&#xD;
&#xD;
  &lt;p:input port="source"/&gt;&#xD;
  &lt;p:output port="result"/&gt;&#xD;
  &#xD;
  &lt;p:option static="true" name="debug-messages-on" as="xs:boolean" select="true()"/&gt;&#xD;
  &#xD;
  &lt;!-- Some preliminary stuff… --&gt;&#xD;
&#xD;
  &lt;p:identity use-when="$debug-messages-on" message="Starting computation at {current-dateTime()}"/&gt;&#xD;
  &#xD;
  &lt;!-- Steps that implement the computation… --&gt;&#xD;
&#xD;
&lt;/p:declare-step&gt;&#xD;
</db:programlisting>
            <db:para role="break-before">Please notice the differences between the two examples:</db:para>
            <db:itemizedlist>
              <db:listitem>
                <db:para>In the first example the on/off switch for the message, here the <db:code>debug-messages-on</db:code> option, is
                    <db:emphasis>dynamic</db:emphasis>. It can be computed/set during run-time, if necessary.</db:para>
                <db:para>However, in the second example, this on/off switch is referenced in a <db:code>use-when</db:code> attribute. All
                    <db:code>use-when</db:code> attributes are evaluated during compile-time, and therefore the <db:code>debug-messages-on</db:code>
                  option must be <db:emphasis>static</db:emphasis> (hence its <db:code>static="true"</db:code> attribute). The only time you can
                  change/set this option, and turn messages on/off, is when invoking the pipeline.</db:para>
              </db:listitem>
              <db:listitem>
                <db:para>The <code role="option" xmlns="http://docbook.org/ns/docbook">select</code> option of the <code role="step"
                    xmlns="http://docbook.org/ns/docbook">p:message</code> step is an XPath expression. The value of the <db:code>message</db:code>
                  attribute is an AVT (Attribute-Value Template). This results in a very different syntax, while the result is identical.</db:para>
              </db:listitem>
            </db:itemizedlist>
          </db:sect3>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2712">
          <db:title>Additional details</db:title>
          <db:itemizedlist>
            <db:listitem>
              <db:para><code role="step" xmlns="http://docbook.org/ns/docbook">p:message</code> preserves all document-properties of the document(s)
                appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2726" role="reference-section">
          <db:title>Reference information</db:title>
          <db:para>This description of the <db:code role="step">p:message</db:code> step is for XProc version: <db:link xlink:href="../index.html"
              xmlns:xlink="http://www.w3.org/1999/xlink">3.1</db:link>. This is a required step (an XProc 3.1 processor must support this).</db:para>
          <db:para>The formal specification for the <code role="step" xmlns="http://docbook.org/ns/docbook">p:message</code> step can be found
              <db:link xlink:href="https://spec.xproc.org/master/head/steps/#c.message" role="newpage specification-link"
              xmlns:xlink="http://www.w3.org/1999/xlink">here</db:link>.</db:para>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:message</code> step is part of categories:</db:para>
          <db:itemizedlist>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Miscellaneous.html" xmlns:xlink="http://www.w3.org/1999/xlink">Miscellaneous</db:link>
              </db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.1/p.rename.html" content-type="text/html" keywords="step p:rename rename element attribute node" type="step"
    version-id="v31" ref="p:rename" name="p:rename">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version! (step published: true)</db:para>
      <db:sect1 xml:id="sect1-d119e2765">
        <db:title><db:link xlink:href="p.message.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject role="next-prev-marker"
                  ><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
          /></db:imageobject></db:inlinemediaobject></db:link> p:rename (3.1)</db:title>
        <db:para>Renames nodes in a document.</db:para>
        <itemizedlist role="toc toc-2" xmlns="http://docbook.org/ns/docbook">
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2774" xmlns:xlink="http://www.w3.org/1999/xlink">Summary</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2924" xmlns:xlink="http://www.w3.org/1999/xlink">Description</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2942" xmlns:xlink="http://www.w3.org/1999/xlink">Examples</link>
            </para>
            <itemizedlist role="toc toc-3">
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e2945" xmlns:xlink="http://www.w3.org/1999/xlink">Basic usage</link>
                </para>
              </listitem>
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#p_rename-v31-existing-attribute" xmlns:xlink="http://www.w3.org/1999/xlink">Renaming to an existing
                    attribute</link>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2957" xmlns:xlink="http://www.w3.org/1999/xlink">Additional details</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e2993" xmlns:xlink="http://www.w3.org/1999/xlink">Errors raised</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3026" xmlns:xlink="http://www.w3.org/1999/xlink">Reference information</link>
            </para>
          </listitem>
        </itemizedlist>
        <db:sect2 xml:id="sect2-d119e2774">
          <db:title>Summary</db:title>
          <db:programlisting role="step-signature">&lt;p:declare-step type="p:rename"&gt; &lt;input port="source" primary="true" content-types="xml
            html" sequence="false"/&gt; &lt;output port="result" primary="true" content-types="xml html" sequence="false"/&gt; &lt;option
            name="new-name" as="xs:QName" required="true"/&gt; &lt;option name="match" as="xs:string" required="false" select="'/*'"/&gt;
            &lt;/p:declare-step&gt;</db:programlisting>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step renames elements, attributes, or
            processing-instruction nodes, specified by an XSLT selection pattern, in the document appearing on its <code role="port"
              xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
          <db:para role="table-header">Ports:</db:para>
          <db:table role="nonumber ports-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Port</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Primary?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Content types</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Seq?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>source</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>input</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xml html</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The document to rename the nodes in.</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>result</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>output</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xml html</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The resulting document.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
          <db:para role="table-header">Options:</db:para>
          <db:table role="nonumber options-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Name</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Req?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Default</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>new-name</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xs:QName</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code> </db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The new name for the matched nodes.</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>match</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para><db:code>xs:string</db:code> (XSLT selection pattern)</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>/*</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The XSLT match pattern for the nodes to rename, as a string.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2924">
          <db:title>Description</db:title>
          <db:para>Using <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code>, it becomes easy to rename elements, attributes, or
            processing-instructions in your document. The step takes the XSLT match pattern in the <code role="option"
              xmlns="http://docbook.org/ns/docbook">match</code> option and holds this against the document appearing on its <code role="port"
              xmlns="http://docbook.org/ns/docbook">source</code> port. Any matching nodes are renamed to the name provided in the <code role="option"
              xmlns="http://docbook.org/ns/docbook">new-name</code> option. Matched nodes must be elements, attributes, or processing-instructions
            (any other match results in error <code xmlns="http://docbook.org/ns/docbook"><link xlink:href="#error-XC0023"
                xmlns:xlink="http://www.w3.org/1999/xlink">XC0023</link></code>).</db:para>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2942">
          <db:title>Examples</db:title>
          <db:sect3 xml:id="sect3-d119e2945">
            <db:title>Basic usage</db:title>
            <db:para>The following example renames an element, an attribute and a processing-instruction in the source document:</db:para>
            <db:para role="keep-with-next">Source document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;thing name="screw" id="A123"/&gt;
   &lt;thing name="bolt" id="A789"/&gt;
   &lt;?convert debug="true"?&gt;
&lt;/things&gt;
</db:programlisting>
            <db:para role="keep-with-next">Pipeline document:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0"&gt;

  &lt;p:input port="source"/&gt;
  &lt;p:output port="result"/&gt;

  &lt;p:rename match="/*/thing" new-name="Thing"/&gt;
  &lt;p:rename match="@name" new-name="thing-name"/&gt;
  &lt;p:rename match="processing-instruction(convert)" new-name="debug-processing"/&gt;

&lt;/p:declare-step&gt;
</db:programlisting>
            <db:para role="keep-with-next">Result document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;Thing thing-name="screw" id="A123"/&gt;
   &lt;Thing thing-name="bolt" id="A789"/&gt;
   &lt;?debug-processing debug="true"?&gt;
&lt;/things&gt;
</db:programlisting>
          </db:sect3>
          <db:sect3 xml:id="p_rename-v31-existing-attribute">
            <db:title>Renaming to an existing attribute</db:title>
            <db:para>This example shows that when an attribute is renamed to one that is already present, the existing attribute is deleted:</db:para>
            <db:para role="keep-with-next">Source document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;thing name="screw" id="A123" thing-name="something else"/&gt;
&lt;/things&gt;
</db:programlisting>
            <db:para role="keep-with-next">Pipeline document:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0"&gt;

  &lt;p:input port="source"/&gt;
  &lt;p:output port="result"/&gt;

  &lt;p:rename match="@name" new-name="thing-name"/&gt;

&lt;/p:declare-step&gt;
</db:programlisting>
            <db:para role="keep-with-next">Result document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;thing thing-name="screw" id="A123"/&gt;
&lt;/things&gt;
</db:programlisting>
          </db:sect3>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2957">
          <db:title>Additional details</db:title>
          <db:itemizedlist>
            <db:listitem>
              <db:para><code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> preserves all document-properties of the document(s)
                appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
            </db:listitem>
            <db:listitem>
              <db:para>If an attribute is renamed to an attribute that already exists on this element, this existing attribute is deleted. See the
                  <link xlink:href="#p_rename-v31-existing-attribute" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook"
                  >Renaming to an existing attribute</link> example.</db:para>
            </db:listitem>
            <db:listitem>
              <db:para>If an <db:code>xml:base</db:code> attribute is renamed to something else, the underlying base URI of the element is
                  <db:emphasis>not</db:emphasis> changed.</db:para>
              <db:para>If an attribute is renamed <db:emphasis>to</db:emphasis> <db:code>xml:base</db:code>, the base URI of the underlying element is
                changed to the value of this attribute.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e2993">
          <db:title>Errors raised</db:title>
          <db:table role="nonumber error-codes-table">
            <db:title/>
            <db:tgroup cols="2">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Error code</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para xml:id="error-XC0013">
                      <db:link xlink:href="../error-codes.html#error-XC0013" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <db:code>XC0013</db:code>
                      </db:link>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>It is a dynamic error if the pattern matches a processing instruction and the new name has a non-null
                      namespace.</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para xml:id="error-XC0023">
                      <db:link xlink:href="../error-codes.html#error-XC0023" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <db:code>XC0023</db:code>
                      </db:link>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>It is a dynamic error if the selection pattern matches a wrong type of node.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3026" role="reference-section">
          <db:title>Reference information</db:title>
          <db:para>This description of the <db:code role="step">p:rename</db:code> step is for XProc version: <db:link xlink:href="../index.html"
              xmlns:xlink="http://www.w3.org/1999/xlink">3.1</db:link>. This is a required step (an XProc 3.1 processor must support this).</db:para>
          <db:para>The formal specification for the <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step can be found <db:link
              xlink:href="https://spec.xproc.org/master/head/steps/#c.rename" role="newpage specification-link"
              xmlns:xlink="http://www.w3.org/1999/xlink">here</db:link>.</db:para>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step is part of categories:</db:para>
          <db:itemizedlist>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink">Basic XML manipulation</db:link>
              </db:para>
            </db:listitem>
          </db:itemizedlist>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step is also present in version: <db:link
              xlink:href="../3.0/p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">3.0</db:link>.</db:para>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <!-- == PAGES FOR VERSION 3.0 == -->
  <xtlcon:document href-target="3.0/index.html" content-type="text/html" keywords="" type="all-steps-for-version" version-id="v30">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e3074">
        <db:title>XProc steps (3.0)</db:title>
        <db:para>Steps for XProc version 3.0. You can also view these steps <db:link xlink:href="categories.html"
            xmlns:xlink="http://www.w3.org/1999/xlink">by category</db:link>.</db:para>
        <db:para/>
        <db:para role="step-start-character-list"><db:xref linkend="steps_I"/>  <db:xref linkend="steps_R"/></db:para>
        <db:sect2 xml:id="steps_I">
          <db:title role="step-list-start-character">I</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</db:link> - Copies the source to
                the result without modifications.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_R">
          <db:title role="step-list-start-character">R</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:rename</db:link> - Renames nodes in a
                document.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.0/categories.html" content-type="text/html" keywords="categories" type="categories-overview" version-id="v30">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e3111">
        <db:title>Categories (3.0)</db:title>
        <sect2 xml:id="sect2-d119e3114" xmlns="http://docbook.org/ns/docbook">
          <db:title>Primary categories</db:title>
          <db:para>The following categories are defined by the XProc specification itself:</db:para>
          <db:itemizedlist role="category-list">
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
              <db:para>XProc steps that a conformant XProc processor <db:emphasis>must</db:emphasis> support. In other words: whatever processor you
                use for processing your XProc pipelines, you can trust that these steps will always work.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </sect2>
        <sect2 xml:id="sect2-d119e3129" xmlns="http://docbook.org/ns/docbook">
          <db:title>Other categories</db:title>
          <db:para>The following categories are defined by XProcRef:</db:para>
          <db:itemizedlist role="category-list">
            <db:listitem>
              <db:para>
                <db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink">Basic XML manipulation</db:link>
              </db:para>
              <db:para>These steps implement basic XML manipulation, like adding attributes, inserting elements, etc.</db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Miscellaneous.html" xmlns:xlink="http://www.w3.org/1999/xlink">Miscellaneous</db:link>
              </db:para>
              <db:para>Miscellaneous steps, which are usually used for housekeeping purposes in the pipeline.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.0/Standard_XProc_steps.html" content-type="text/html" keywords="category standard" type="category" version-id="v30"
    ref="standard-steps" name="Standard XProc steps">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e3153">
        <db:title>Category: Standard XProc steps (3.0) <db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink"
              ><db:inlinemediaobject role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/next.png" width="1.5%"
                /></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>XProc steps that a conformant XProc processor <db:emphasis>must</db:emphasis> support. In other words: whatever processor you use for
          processing your XProc pipelines, you can trust that these steps will always work.</db:para>
        <db:para role="step-start-character-list"><db:xref linkend="steps_I"/>  <db:xref linkend="steps_R"/></db:para>
        <db:sect2 xml:id="steps_I">
          <db:title role="step-list-start-character">I</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</db:link> - Copies the source to
                the result without modifications.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="steps_R">
          <db:title role="step-list-start-character">R</db:title>
          <db:itemizedlist role="step-list">
            <db:listitem>
              <db:para><db:link xlink:href="p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:rename</db:link> - Renames nodes in a
                document.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.0/Basic_XML_manipulation.html" content-type="text/html" keywords="category xml-manipulation" type="category"
    version-id="v30" ref="basic-xml-manipulation" name="Basic XML manipulation">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e3193">
        <db:title><db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject
              role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
              /></db:imageobject></db:inlinemediaobject></db:link> Category: Basic XML manipulation (3.0) <db:link xlink:href="Miscellaneous.html"
            xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject role="next-prev-marker"><db:imageobject><db:imagedata
                  fileref="../images/next.png" width="1.5%"/></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>These steps implement basic XML manipulation, like adding attributes, inserting elements, etc.</db:para>
        <db:itemizedlist role="step-list">
          <db:listitem>
            <db:para><db:link xlink:href="p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:rename</db:link> - Renames nodes in a
              document.</db:para>
          </db:listitem>
        </db:itemizedlist>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.0/Miscellaneous.html" content-type="text/html" keywords="category miscellaneous" type="category" version-id="v30"
    ref="misc" name="Miscellaneous">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version!</db:para>
      <db:sect1 xml:id="sect1-d119e3218">
        <db:title><db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject
              role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
              /></db:imageobject></db:inlinemediaobject></db:link> Category: Miscellaneous (3.0)</db:title>
        <db:para>Miscellaneous steps, which are usually used for housekeeping purposes in the pipeline.</db:para>
        <db:itemizedlist role="step-list">
          <db:listitem>
            <db:para><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">p:identity</db:link> - Copies the source to the
              result without modifications.</db:para>
          </db:listitem>
        </db:itemizedlist>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.0/p.identity.html" content-type="text/html" keywords="step p:identity identity" type="step" version-id="v30"
    ref="p:identity" name="p:identity">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version! (step published: true)</db:para>
      <db:sect1 xml:id="sect1-d119e3239">
        <db:title>p:identity (3.0) <db:link xlink:href="p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject
              role="next-prev-marker"><db:imageobject><db:imagedata fileref="../images/next.png" width="1.5%"
              /></db:imageobject></db:inlinemediaobject></db:link></db:title>
        <db:para>Copies the source to the result without modifications.</db:para>
        <itemizedlist role="toc toc-2" xmlns="http://docbook.org/ns/docbook">
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3248" xmlns:xlink="http://www.w3.org/1999/xlink">Summary</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3340" xmlns:xlink="http://www.w3.org/1999/xlink">Description</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3353" xmlns:xlink="http://www.w3.org/1999/xlink">Examples</link>
            </para>
            <itemizedlist role="toc toc-3">
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e3356" xmlns:xlink="http://www.w3.org/1999/xlink">Create a fixed document</link>
                </para>
              </listitem>
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e3382" xmlns:xlink="http://www.w3.org/1999/xlink">Create an explicit anchor points in your
                    pipeline</link>
                </para>
              </listitem>
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e3408" xmlns:xlink="http://www.w3.org/1999/xlink">Produce a processing message</link>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3422" xmlns:xlink="http://www.w3.org/1999/xlink">Additional details</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3436" xmlns:xlink="http://www.w3.org/1999/xlink">Reference information</link>
            </para>
          </listitem>
        </itemizedlist>
        <db:sect2 xml:id="sect2-d119e3248">
          <db:title>Summary</db:title>
          <db:programlisting role="step-signature">&lt;p:declare-step type="p:identity"&gt; &lt;input port="source" primary="true" content-types="any"
            sequence="true"/&gt; &lt;output port="result" primary="true" content-types="any" sequence="true"/&gt;
            &lt;/p:declare-step&gt;</db:programlisting>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step makes a verbatim copy of what appears on its
              <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port to its <code role="port"
              xmlns="http://docbook.org/ns/docbook">result</code> port.</db:para>
          <db:para role="table-header">Ports:</db:para>
          <db:table role="nonumber ports-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Port</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Primary?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Content types</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Seq?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>source</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>input</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>any</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The source document(s)</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>result</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>output</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>any</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The resulting document(s). These will be exactly the same as what appeared on the <code role="port"
                        xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3340">
          <db:title>Description</db:title>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step does… nothing. It makes a verbatim copy of all
            documents appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port to its <code role="port"
              xmlns="http://docbook.org/ns/docbook">result</code> port. Although it doesn’t do anything, it is actually extremely useful and virtually
            indispensable. The examples below show some use cases.</db:para>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3353">
          <db:title>Examples</db:title>
          <db:sect3 xml:id="sect3-d119e3356">
            <db:title>Create a fixed document</db:title>
            <db:para>There are many situations where you need to create a fixed document in your pipeline. For instance:</db:para>
            <db:itemizedlist>
              <db:listitem>
                <db:para>On an error catch you want some <db:tag>error …</db:tag> element as result:</db:para>
                <db:programlisting xml:space="preserve">&lt;p:catch&gt;&#xD;
  &lt;p:identity&gt;&#xD;
    &lt;p:with-input&gt;&#xD;
      &lt;error … /&gt;&#xD;
    &lt;/p:with-input&gt;&#xD;
  &lt;/p:identity&gt;&#xD;
&lt;/p:catch&gt;&#xD;
</db:programlisting>
              </db:listitem>
              <db:listitem>
                <db:para>Some pipelines write their main results to disk and the actual output of the pipeline doesn’t matter. In these cases it is
                  often useful to produce some kind of report document with relevant information (for instance, when it happened, where the results
                  are, etc.):</db:para>
                <db:programlisting xml:space="preserve">&lt;p:identity&gt;&#xD;
  &lt;p:with-input&gt;&#xD;
    &lt;report timestamp="{current-dateTime()}" href-result="{$href-result-location}" … /&gt;&#xD;
  &lt;/p:with-input&gt;&#xD;
&lt;/p:identity&gt;&#xD;
</db:programlisting>
              </db:listitem>
            </db:itemizedlist>
          </db:sect3>
          <db:sect3 xml:id="sect3-d119e3382">
            <db:title>Create an explicit anchor points in your pipeline</db:title>
            <db:para>Because the <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step does’t do anything, it can be used to
              create “anchor points” in your pipeline. Assume you have a complicated pipeline where some version of the document flowing through must
              be used somewhere else. The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step can be used to mark such a
              location explicitly. In the following example an anchor point called <db:code>raw-version</db:code> is created and, later on, referred
              to:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0"&gt;&#xD;
&#xD;
  &lt;!-- Some complicated computations… --&gt;&#xD;
&#xD;
  &lt;p:identity name="raw-version"/&gt;&#xD;
&#xD;
  &lt;!-- Some more complicated computations… --&gt;&#xD;
&#xD;
  &lt;!-- And then a step refers back to the raw version: --&gt;&#xD;
  &lt;p:insert match="/*" position="first-child"&gt;&#xD;
    &lt;p:port port="insertion" pipe="@raw-version"/&gt;&#xD;
  &lt;/p:insert&gt;&#xD;
&#xD;
  &lt;!-- And some more computations… --&gt;&#xD;
&#xD;
&lt;/p:declare-step&gt;&#xD;
</db:programlisting>
            <db:para>You could also achieve this by using the <db:code>name="raw-version"</db:code> attribute on the last step of the first batch of
              computations. However, by using an explicit <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step it stands out
              in the code. Also, when the computations change (and they will), you don’t have to remember to keep the
                <db:code>name="raw-version"</db:code> attribute on the <db:emphasis>last</db:emphasis> one always.</db:para>
          </db:sect3>
          <db:sect3 xml:id="sect3-d119e3408">
            <db:title>Produce a processing message</db:title>
            <db:para>XProc has a <db:code>message</db:code> attribute (or <db:code>p:message</db:code> on steps not in the XProc namespace) that
              results in a message when the pipeline runs. Where this message appears depends on how the pipeline is run. Sometimes you want to
              explicitly produce messages when some point in your pipeline is reached. Since <code role="step" xmlns="http://docbook.org/ns/docbook"
                >p:identity</code> does’t do anything, it is ideal for this:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:identity message="We started processing!"/&gt;&#xD;
&lt;p:identity message="- Input document {$href-input}"/&gt;&#xD;
&lt;p:identity message="- Processing type {$processing-type}"/&gt;</db:programlisting>
          </db:sect3>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3422">
          <db:title>Additional details</db:title>
          <db:itemizedlist>
            <db:listitem>
              <db:para><code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> preserves all document-properties of the document(s)
                appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3436" role="reference-section">
          <db:title>Reference information</db:title>
          <db:para>This description of the <db:code role="step">p:identity</db:code> step is for XProc version: <db:link xlink:href="index.html"
              xmlns:xlink="http://www.w3.org/1999/xlink">3.0</db:link>. This is a required step (an XProc 3.0 processor must support this).</db:para>
          <db:para>The formal specification for the <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step can be found
              <db:link xlink:href="https://spec.xproc.org/3.0/steps/#c.identity" role="newpage specification-link"
              xmlns:xlink="http://www.w3.org/1999/xlink">here</db:link>.</db:para>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step is part of categories:</db:para>
          <db:itemizedlist>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Miscellaneous.html" xmlns:xlink="http://www.w3.org/1999/xlink">Miscellaneous</db:link>
              </db:para>
            </db:listitem>
          </db:itemizedlist>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:identity</code> step is also present in version: <db:link
              xlink:href="../3.1/p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink">3.1</db:link>.</db:para>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
  <xtlcon:document href-target="3.0/p.rename.html" content-type="text/html" keywords="step p:rename rename element attribute node" type="step"
    version-id="v30" ref="p:rename" name="p:rename">
    <db:article version="5.0" xmlns:db="http://docbook.org/ns/docbook">
      <db:info>
        <db:title/>
      </db:info>
      <db:para role="page-banner">You are looking at the TEST version! (step published: true)</db:para>
      <db:sect1 xml:id="sect1-d119e3484">
        <db:title><db:link xlink:href="p.identity.html" xmlns:xlink="http://www.w3.org/1999/xlink"><db:inlinemediaobject role="next-prev-marker"
                  ><db:imageobject><db:imagedata fileref="../images/previous.png" width="1.5%"
          /></db:imageobject></db:inlinemediaobject></db:link> p:rename (3.0)</db:title>
        <db:para>Renames nodes in a document.</db:para>
        <itemizedlist role="toc toc-2" xmlns="http://docbook.org/ns/docbook">
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3493" xmlns:xlink="http://www.w3.org/1999/xlink">Summary</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3643" xmlns:xlink="http://www.w3.org/1999/xlink">Description</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3661" xmlns:xlink="http://www.w3.org/1999/xlink">Examples</link>
            </para>
            <itemizedlist role="toc toc-3">
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#sect3-d119e3664" xmlns:xlink="http://www.w3.org/1999/xlink">Basic usage</link>
                </para>
              </listitem>
              <listitem role="toc toc-3">
                <para role="tocentry tocentry-3">
                  <link xlink:href="#p_rename-v30-existing-attribute" xmlns:xlink="http://www.w3.org/1999/xlink">Renaming to an existing
                    attribute</link>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3676" xmlns:xlink="http://www.w3.org/1999/xlink">Additional details</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3712" xmlns:xlink="http://www.w3.org/1999/xlink">Errors raised</link>
            </para>
          </listitem>
          <listitem role="toc toc-2">
            <para role="tocentry tocentry-2">
              <link xlink:href="#sect2-d119e3745" xmlns:xlink="http://www.w3.org/1999/xlink">Reference information</link>
            </para>
          </listitem>
        </itemizedlist>
        <db:sect2 xml:id="sect2-d119e3493">
          <db:title>Summary</db:title>
          <db:programlisting role="step-signature">&lt;p:declare-step type="p:rename"&gt; &lt;input port="source" primary="true" content-types="xml
            html" sequence="false"/&gt; &lt;output port="result" primary="true" content-types="xml html" sequence="false"/&gt; &lt;option
            name="new-name" as="xs:QName" required="true"/&gt; &lt;option name="match" as="xs:string" required="false" select="'/*'"/&gt;
            &lt;/p:declare-step&gt;</db:programlisting>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step renames elements, attributes, or
            processing-instruction nodes, specified by an XSLT selection pattern, in the document appearing on its <code role="port"
              xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
          <db:para role="table-header">Ports:</db:para>
          <db:table role="nonumber ports-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Port</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Primary?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Content types</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Seq?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>source</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>input</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xml html</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The document to rename the nodes in.</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>result</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>output</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xml html</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The resulting document.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
          <db:para role="table-header">Options:</db:para>
          <db:table role="nonumber options-table">
            <db:title/>
            <db:tgroup cols="6">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Name</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Type</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Req?</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Default</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>new-name</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>xs:QName</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>true</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code> </db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The new name for the matched nodes.</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para>
                      <db:code>match</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para><db:code>xs:string</db:code> (XSLT selection pattern)</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>false</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>
                      <db:code>/*</db:code>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>The XSLT match pattern for the nodes to rename, as a string.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3643">
          <db:title>Description</db:title>
          <db:para>Using <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code>, it becomes easy to rename elements, attributes, or
            processing-instructions in your document. The step takes the XSLT match pattern in the <code role="option"
              xmlns="http://docbook.org/ns/docbook">match</code> option and holds this against the document appearing on its <code role="port"
              xmlns="http://docbook.org/ns/docbook">source</code> port. Any matching nodes are renamed to the name provided in the <code role="option"
              xmlns="http://docbook.org/ns/docbook">new-name</code> option. Matched nodes must be elements, attributes, or processing-instructions
            (any other match results in error <code xmlns="http://docbook.org/ns/docbook"><link xlink:href="#error-XC0023"
                xmlns:xlink="http://www.w3.org/1999/xlink">XC0023</link></code>).</db:para>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3661">
          <db:title>Examples</db:title>
          <db:sect3 xml:id="sect3-d119e3664">
            <db:title>Basic usage</db:title>
            <db:para>The following example renames an element, an attribute and a processing-instruction in the source document:</db:para>
            <db:para role="keep-with-next">Source document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;thing name="screw" id="A123"/&gt;
   &lt;thing name="bolt" id="A789"/&gt;
   &lt;?convert debug="true"?&gt;
&lt;/things&gt;
</db:programlisting>
            <db:para role="keep-with-next">Pipeline document:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0"&gt;

  &lt;p:input port="source"/&gt;
  &lt;p:output port="result"/&gt;

  &lt;p:rename match="/*/thing" new-name="Thing"/&gt;
  &lt;p:rename match="@name" new-name="thing-name"/&gt;
  &lt;p:rename match="processing-instruction(convert)" new-name="debug-processing"/&gt;

&lt;/p:declare-step&gt;
</db:programlisting>
            <db:para role="keep-with-next">Result document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;Thing thing-name="screw" id="A123"/&gt;
   &lt;Thing thing-name="bolt" id="A789"/&gt;
   &lt;?debug-processing debug="true"?&gt;
&lt;/things&gt;
</db:programlisting>
          </db:sect3>
          <db:sect3 xml:id="p_rename-v30-existing-attribute">
            <db:title>Renaming to an existing attribute</db:title>
            <db:para>This example shows that when an attribute is renamed to one that is already present, the existing attribute is deleted:</db:para>
            <db:para role="keep-with-next">Source document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;thing name="screw" id="A123" thing-name="something else"/&gt;
&lt;/things&gt;
</db:programlisting>
            <db:para role="keep-with-next">Pipeline document:</db:para>
            <db:programlisting xml:space="preserve">&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0"&gt;

  &lt;p:input port="source"/&gt;
  &lt;p:output port="result"/&gt;

  &lt;p:rename match="@name" new-name="thing-name"/&gt;

&lt;/p:declare-step&gt;
</db:programlisting>
            <db:para role="keep-with-next">Result document:</db:para>
            <db:programlisting xml:space="preserve">&lt;things&gt;
   &lt;thing thing-name="screw" id="A123"/&gt;
&lt;/things&gt;
</db:programlisting>
          </db:sect3>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3676">
          <db:title>Additional details</db:title>
          <db:itemizedlist>
            <db:listitem>
              <db:para><code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> preserves all document-properties of the document(s)
                appearing on its <code role="port" xmlns="http://docbook.org/ns/docbook">source</code> port.</db:para>
            </db:listitem>
            <db:listitem>
              <db:para>If an attribute is renamed to an attribute that already exists on this element, this existing attribute is deleted. See the
                  <link xlink:href="#p_rename-v30-existing-attribute" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook"
                  >Renaming to an existing attribute</link> example.</db:para>
            </db:listitem>
            <db:listitem>
              <db:para>If an <db:code>xml:base</db:code> attribute is renamed to something else, the underlying base URI of the element is
                  <db:emphasis>not</db:emphasis> changed.</db:para>
              <db:para>If an attribute is renamed <db:emphasis>to</db:emphasis> <db:code>xml:base</db:code>, the base URI of the underlying element is
                changed to the value of this attribute.</db:para>
            </db:listitem>
          </db:itemizedlist>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3712">
          <db:title>Errors raised</db:title>
          <db:table role="nonumber error-codes-table">
            <db:title/>
            <db:tgroup cols="2">
              <db:thead>
                <db:row>
                  <db:entry>
                    <db:para>Error code</db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>Description</db:para>
                  </db:entry>
                </db:row>
              </db:thead>
              <db:tbody>
                <db:row>
                  <db:entry>
                    <db:para xml:id="error-XC0013">
                      <db:link xlink:href="../error-codes.html#error-XC0013" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <db:code>XC0013</db:code>
                      </db:link>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>It is a dynamic error if the pattern matches a processing instruction and the new name has a non-null
                      namespace.</db:para>
                  </db:entry>
                </db:row>
                <db:row>
                  <db:entry>
                    <db:para xml:id="error-XC0023">
                      <db:link xlink:href="../error-codes.html#error-XC0023" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <db:code>XC0023</db:code>
                      </db:link>
                    </db:para>
                  </db:entry>
                  <db:entry>
                    <db:para>It is a dynamic error if the selection pattern matches a wrong type of node.</db:para>
                  </db:entry>
                </db:row>
              </db:tbody>
            </db:tgroup>
          </db:table>
        </db:sect2>
        <db:sect2 xml:id="sect2-d119e3745" role="reference-section">
          <db:title>Reference information</db:title>
          <db:para>This description of the <db:code role="step">p:rename</db:code> step is for XProc version: <db:link xlink:href="index.html"
              xmlns:xlink="http://www.w3.org/1999/xlink">3.0</db:link>. This is a required step (an XProc 3.0 processor must support this).</db:para>
          <db:para>The formal specification for the <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step can be found <db:link
              xlink:href="https://spec.xproc.org/3.0/steps/#c.rename" role="newpage specification-link" xmlns:xlink="http://www.w3.org/1999/xlink"
              >here</db:link>.</db:para>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step is part of categories:</db:para>
          <db:itemizedlist>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Standard_XProc_steps.html" xmlns:xlink="http://www.w3.org/1999/xlink">Standard XProc steps</db:link>
              </db:para>
            </db:listitem>
            <db:listitem>
              <db:para>
                <db:link xlink:href="Basic_XML_manipulation.html" xmlns:xlink="http://www.w3.org/1999/xlink">Basic XML manipulation</db:link>
              </db:para>
            </db:listitem>
          </db:itemizedlist>
          <db:para>The <code role="step" xmlns="http://docbook.org/ns/docbook">p:rename</code> step is also present in version: <db:link
              xlink:href="../3.1/p.rename.html" xmlns:xlink="http://www.w3.org/1999/xlink">3.1</db:link>.</db:para>
        </db:sect2>
      </db:sect1>
    </db:article>
  </xtlcon:document>
</xtlcon:document-container>
